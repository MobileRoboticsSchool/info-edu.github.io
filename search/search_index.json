{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bienvenue Que faire de son temps en cette p\u00e9riode de confinement ? Rester en contact avec nos proches? Certainement ! Mais pourquoi pas aussi en profiter pour en apprendre plus sur l'informatique ? Sans elle nous ne pourrions pas garder ces contacts tout en pr\u00e9servant la bonne sant\u00e9 de nos proches comme nous pouvons le faire aujourd'hui. Ce que je vous propose avec ce site, c'est de travailler \u00e0 domicile sur des petits projets en lien avec l'actualit\u00e9. Ces projets pourront je l'esp\u00e8re vous apporter des nouvelles comp\u00e9tences en informatique tout en vous donnant l'envie d'aller plus loin en voyant les possibilit\u00e9s que ces comp\u00e9tences offrent. Projets Niveau Gymnase/Lyc\u00e9e: Casse Briques En programmant le jeu Casse Brique, d\u00e9couvrez en une activit\u00e9 les incontournables de la programmation en Scratch, ainsi que ce qui se cache derri\u00e8re les jeux vid\u00e9os, tout cela de fa\u00e7on stimulante. Simuler une \u00e9pid\u00e9mie Dans ce projet, vous d\u00e9couvrirez comment cr\u00e9er de toute pi\u00e8ce un simulateur avec le langage Scratch. Ce simulateur nous permettra d'\u00e9tudier des concepts informatique tels que l'abstraction, mais aussi de prendre conscience des r\u00e9percussions de nos actions sur la soci\u00e9t\u00e9 durant une \u00e9pid\u00e9mie. Comme ce site est tout nouveau (comme le confinement) je n'ai pour l'instant que deux projets \u00e0 vous proposer. N'h\u00e9sitez pas \u00e0 me contacter si vous avez vu quelque chose que vous aimeriez comprendre en informatique \u00e0 travers un autre projet. Je pourrais potentiellement y travailler.","title":"Introduction"},{"location":"#bienvenue","text":"Que faire de son temps en cette p\u00e9riode de confinement ? Rester en contact avec nos proches? Certainement ! Mais pourquoi pas aussi en profiter pour en apprendre plus sur l'informatique ? Sans elle nous ne pourrions pas garder ces contacts tout en pr\u00e9servant la bonne sant\u00e9 de nos proches comme nous pouvons le faire aujourd'hui. Ce que je vous propose avec ce site, c'est de travailler \u00e0 domicile sur des petits projets en lien avec l'actualit\u00e9. Ces projets pourront je l'esp\u00e8re vous apporter des nouvelles comp\u00e9tences en informatique tout en vous donnant l'envie d'aller plus loin en voyant les possibilit\u00e9s que ces comp\u00e9tences offrent.","title":"Bienvenue"},{"location":"#projets","text":"Niveau Gymnase/Lyc\u00e9e: Casse Briques En programmant le jeu Casse Brique, d\u00e9couvrez en une activit\u00e9 les incontournables de la programmation en Scratch, ainsi que ce qui se cache derri\u00e8re les jeux vid\u00e9os, tout cela de fa\u00e7on stimulante. Simuler une \u00e9pid\u00e9mie Dans ce projet, vous d\u00e9couvrirez comment cr\u00e9er de toute pi\u00e8ce un simulateur avec le langage Scratch. Ce simulateur nous permettra d'\u00e9tudier des concepts informatique tels que l'abstraction, mais aussi de prendre conscience des r\u00e9percussions de nos actions sur la soci\u00e9t\u00e9 durant une \u00e9pid\u00e9mie. Comme ce site est tout nouveau (comme le confinement) je n'ai pour l'instant que deux projets \u00e0 vous proposer. N'h\u00e9sitez pas \u00e0 me contacter si vous avez vu quelque chose que vous aimeriez comprendre en informatique \u00e0 travers un autre projet. Je pourrais potentiellement y travailler.","title":"Projets"},{"location":"about/","text":"A propos de l'auteur Apr\u00e8s quelques ann\u00e9es dans la recherche en informatique, \u00e0 travailler sur les sujets tr\u00e8s stimulants que sont la robotique autonomes, la r\u00e9alit\u00e9 augment\u00e9e, la reconstruction 3D et le machine learning, mon plaisir pour partager mon enthousiasme pour l'informatique grandit. C'est ainsi que de la recherche en informatique je fais une transition douce son enseignement. J'ai du plaisir \u00e0 faire de l'informatique pour faire de l'informatique, car elle m'offre une source de puzzles infinie, mais il n'y a pas que \u00e7a. Je pense que comprendre l'informatique et avoir des comp\u00e9tences dans le domaine est primordial pour comprendre notre monde qui devient de plus en plus num\u00e9rique. Ainsi je souhaite \u00e0 chacun, au moins, de savoir que le monde de l'informatique lui est ouvert. J'esp\u00e8re donc \u00e0 l'avenir donner les clefs de ce monde au plus grand nombre. Contact Retrouvez les informations pour me contacter sur ma page professionnelle .","title":"Contact"},{"location":"about/#a-propos-de-lauteur","text":"Apr\u00e8s quelques ann\u00e9es dans la recherche en informatique, \u00e0 travailler sur les sujets tr\u00e8s stimulants que sont la robotique autonomes, la r\u00e9alit\u00e9 augment\u00e9e, la reconstruction 3D et le machine learning, mon plaisir pour partager mon enthousiasme pour l'informatique grandit. C'est ainsi que de la recherche en informatique je fais une transition douce son enseignement. J'ai du plaisir \u00e0 faire de l'informatique pour faire de l'informatique, car elle m'offre une source de puzzles infinie, mais il n'y a pas que \u00e7a. Je pense que comprendre l'informatique et avoir des comp\u00e9tences dans le domaine est primordial pour comprendre notre monde qui devient de plus en plus num\u00e9rique. Ainsi je souhaite \u00e0 chacun, au moins, de savoir que le monde de l'informatique lui est ouvert. J'esp\u00e8re donc \u00e0 l'avenir donner les clefs de ce monde au plus grand nombre.","title":"A propos de l'auteur"},{"location":"about/#contact","text":"Retrouvez les informations pour me contacter sur ma page professionnelle .","title":"Contact"},{"location":"introPython/","text":"Introduction \u00e0 Python Pour pouvoir communiquer avec les machines, il faut \u00eatre en mesure de communiquer avec elles. Pour cela une multitudes de langages existent. Cette page vous propose de d\u00e9couvrir le langage Python tr\u00e8s en vogue dans le milieu de l'\u00e9ducation tout autant que dans le milieu de la recherche pour r\u00e9soudre des probl\u00e8mes aussi pointus que ceux d'apprentissage autonome. Au travers des exercices suivant vous d\u00e9couvrirez des \u00e9l\u00e9ments essentiels de tout langage informatique que sont: l'utilisation de variables, de boucles, de conditions et de fonctions. Commentaires et instructions simples Pour chaque section de cette page, j'utiliserai un code int\u00e9gr\u00e9 qui vous permettra d'ex\u00e9cuter des scripts python sans quitter cette page, et d'interagir avec le code comme vous le souhaitez. Alors allons-y : lisez le code, essayez de pr\u00e9voir ce qui va se passer dans le terminal (en noir), et appuyez sur le bouton d'ex\u00e9cution. N'h\u00e9sitez pas \u00e0 changer le code et \u00e0 appuyer \u00e0 nouveau sur play pour voir ce que la machine comprend ou pas! Pour cela, vous pouvez aussi taper directement des instructions dans le terminal (la fen\u00eatre noire). Variables et op\u00e9rations standard Les ordinateurs ne font pas que r\u00e9p\u00e9ter les m\u00eames choses encore et encore. Ils nous sont utiles car ils peuvent s'adapter \u00e0 diff\u00e9rentes situation. Comment cela marche ? Gr\u00e2ce \u00e0 des donn\u00e9es qui sont collect\u00e9es et fournies \u00e0 l'ordinateur. Dans ons programmes, nous appelerons ces donn\u00e9es des variables. Une variable est comme une bo\u00eete dans laquelle nous mettons des informations auquel notre programme peut acc\u00e9der autant que n\u00e9cessaire et changer le contenu. Modifiez le code, faites-le planter ! Ainsi vous pourrez devenir autonome en vous familiarisant au message d'erreur que l'ordinateur vous donnera en cas de probl\u00e8me. Boucles Une autre fa\u00e7on dont les ordinateurs et les robots changent notre vie est dans leur capacit\u00e9 \u00e0 faire face \u00e0 des t\u00e2ches r\u00e9p\u00e9titives sans s'ennuyer. Mais le programmeur qui les a programm\u00e9s s'ennuie facilement, il doit donc disposer d'un outil pour s'occuper des r\u00e9p\u00e9titions dans son code. C'est \u00e0 cela que servent les boucles. Exercice 1 Ajoutez quelques lignes dans le script ci-dessus pour afficher les 20 premiers nombres de la s\u00e9quence de Fibonacci. Fonctions Connaissez-vous le langage appel\u00e9 Assembleur ? Prenez quelques secondes pour le regarder sur wikipedia et essayez de d\u00e9chiffrer ce que fait le programme dans l'image en haut \u00e0 droite... Ce n'est pas le langage dans lequel vous voulez programmer tous les jours ! Prenez le temps de r\u00e9fl\u00e9chir \u00e0 la chance que vous avez de ne pas avoir \u00e0 en passer par l\u00e0 et d'utiliser plut\u00f4t python. Cette chance, vous l'avez en partie gr\u00e2ce aux fonctions. Comme en math\u00e9matiques, les fonctions peuvent prendre des arguments et retourner une valeur. Vous devriez tous avoir d\u00e9j\u00e0 utilis\u00e9 la fonction cosinus. Le cosinus prend un param\u00e8tre, un angle, et renvoie une valeur comprise entre -1 et 1. En informatique, les fonctions se pr\u00e9sentent sous de nombreuses formes. Elles peuvent prendre un ou plusieurs arguments ou aucun. Elles peuvent renvoyer des valeurs, mais elles ne sont pas oblig\u00e9es de le faire (dans ce cas, on pourrait appeler cela une proc\u00e9dure). Un tel outil permet de rendre notre code lisible, moins r\u00e9p\u00e9titif, et de combiner et construire des fonctions les unes avec et sur les autres. C'est ainsi que, gr\u00e2ce \u00e0 certains programmeurs, votre ordinateur peut comprendre un langage de haut niveau comme python, alors qu'\u00e0 la base il ne peut comprendre que l'assemblage. Voyons comment utiliser cet outil incroyable sur python. Exercice 2 D\u00e9finir une fonction avec un param\u00e8tre n qui calcule et retourne le nombre d'or en utilisant les n i\u00e8me et n+1 i\u00e8me nombres de fibonacci. Conditions Dans nos programmes, en fonction de certaines variables, parfois nous voulons faire des choses, parfois nous ne le faisons pas. Pour cela, le dernier ingr\u00e9dient qui nous manque dans notre arsenal d'outils est la condition. Les conditions sont assez simples et nous les utilisons tous les jours : Est-ce qu'il pleut ? Oui/Non => Prenez un parapluie/ne le prenez pas. Notez qu'en informatique, les conditions sont compos\u00e9es de : un test aboutissant \u00e0 un bool\u00e9en (Vrai ou Faux), ce qu'il faut faire si le test est Vrai, et parfois ce qu'il faut faire s'il ne l'est pas. Exercice 3 Modifiez le code en suivant les instructions qu'il contient. Listes Quand vous vous pr\u00e9parez pour aller faire des courses (ou que vos parents le font), que faites-vous ? Vous prenez autant de bout de papier que vous avez d'achats \u00e0 faire, ou bien vous prenez un seul bout de papier sur lequel vous notez tout ? J'esp\u00e8re que vous utilisez la deuxi\u00e8me option, pour vos poches et la plan\u00e8te. En programmation c'est pareil. Si on a une liste d'\u00e9l\u00e9ments \u00e0 retenir sur lesquels nous devons faire les m\u00eames types d'op\u00e9ration, souvent on n'utilisera pas plusieurs variables mais seulement une seule liste. Exercice 4 Dans l'exercice pr\u00e9c\u00e9dent nous avons utilis\u00e9 la fonction int() pour convertir une chaine de caract\u00e8re en entier. Pour d\u00e9couvrir l'utilisation des listes, reprogrammez la fonction int() que nous appelerons str_to_int(s) . Utilisez pour cela la chaine de caract\u00e8re fournine en argument comme une liste de caract\u00e8res. Acc\u00e9der pour cela \u00e0 chacun des caract\u00e8res \u00e0 l'aide des crochets ([]). Vous pourrez \u00e9galement utiliser la fonction ord() qui retourne le nombre entier correspondant \u00e0 l'Unicode d'un caract\u00e8re. Aller plus loin Exercice de math\u00e9matiques Allez sur le site repl et faites un programme pour calculer les nombres pi et e en utilisant des suites. Conclusion Vous voici maintenant \u00e9quip\u00e9 pour vous attaquer \u00e0 de plus gros projets de programmation.","title":"Introduction \u00e0 python"},{"location":"introPython/#introduction-a-python","text":"Pour pouvoir communiquer avec les machines, il faut \u00eatre en mesure de communiquer avec elles. Pour cela une multitudes de langages existent. Cette page vous propose de d\u00e9couvrir le langage Python tr\u00e8s en vogue dans le milieu de l'\u00e9ducation tout autant que dans le milieu de la recherche pour r\u00e9soudre des probl\u00e8mes aussi pointus que ceux d'apprentissage autonome. Au travers des exercices suivant vous d\u00e9couvrirez des \u00e9l\u00e9ments essentiels de tout langage informatique que sont: l'utilisation de variables, de boucles, de conditions et de fonctions.","title":"Introduction \u00e0 Python"},{"location":"introPython/#commentaires-et-instructions-simples","text":"Pour chaque section de cette page, j'utiliserai un code int\u00e9gr\u00e9 qui vous permettra d'ex\u00e9cuter des scripts python sans quitter cette page, et d'interagir avec le code comme vous le souhaitez. Alors allons-y : lisez le code, essayez de pr\u00e9voir ce qui va se passer dans le terminal (en noir), et appuyez sur le bouton d'ex\u00e9cution. N'h\u00e9sitez pas \u00e0 changer le code et \u00e0 appuyer \u00e0 nouveau sur play pour voir ce que la machine comprend ou pas! Pour cela, vous pouvez aussi taper directement des instructions dans le terminal (la fen\u00eatre noire).","title":"Commentaires et instructions simples"},{"location":"introPython/#variables-et-operations-standard","text":"Les ordinateurs ne font pas que r\u00e9p\u00e9ter les m\u00eames choses encore et encore. Ils nous sont utiles car ils peuvent s'adapter \u00e0 diff\u00e9rentes situation. Comment cela marche ? Gr\u00e2ce \u00e0 des donn\u00e9es qui sont collect\u00e9es et fournies \u00e0 l'ordinateur. Dans ons programmes, nous appelerons ces donn\u00e9es des variables. Une variable est comme une bo\u00eete dans laquelle nous mettons des informations auquel notre programme peut acc\u00e9der autant que n\u00e9cessaire et changer le contenu. Modifiez le code, faites-le planter ! Ainsi vous pourrez devenir autonome en vous familiarisant au message d'erreur que l'ordinateur vous donnera en cas de probl\u00e8me.","title":"Variables et op\u00e9rations standard"},{"location":"introPython/#boucles","text":"Une autre fa\u00e7on dont les ordinateurs et les robots changent notre vie est dans leur capacit\u00e9 \u00e0 faire face \u00e0 des t\u00e2ches r\u00e9p\u00e9titives sans s'ennuyer. Mais le programmeur qui les a programm\u00e9s s'ennuie facilement, il doit donc disposer d'un outil pour s'occuper des r\u00e9p\u00e9titions dans son code. C'est \u00e0 cela que servent les boucles. Exercice 1 Ajoutez quelques lignes dans le script ci-dessus pour afficher les 20 premiers nombres de la s\u00e9quence de Fibonacci.","title":"Boucles"},{"location":"introPython/#fonctions","text":"Connaissez-vous le langage appel\u00e9 Assembleur ? Prenez quelques secondes pour le regarder sur wikipedia et essayez de d\u00e9chiffrer ce que fait le programme dans l'image en haut \u00e0 droite... Ce n'est pas le langage dans lequel vous voulez programmer tous les jours ! Prenez le temps de r\u00e9fl\u00e9chir \u00e0 la chance que vous avez de ne pas avoir \u00e0 en passer par l\u00e0 et d'utiliser plut\u00f4t python. Cette chance, vous l'avez en partie gr\u00e2ce aux fonctions. Comme en math\u00e9matiques, les fonctions peuvent prendre des arguments et retourner une valeur. Vous devriez tous avoir d\u00e9j\u00e0 utilis\u00e9 la fonction cosinus. Le cosinus prend un param\u00e8tre, un angle, et renvoie une valeur comprise entre -1 et 1. En informatique, les fonctions se pr\u00e9sentent sous de nombreuses formes. Elles peuvent prendre un ou plusieurs arguments ou aucun. Elles peuvent renvoyer des valeurs, mais elles ne sont pas oblig\u00e9es de le faire (dans ce cas, on pourrait appeler cela une proc\u00e9dure). Un tel outil permet de rendre notre code lisible, moins r\u00e9p\u00e9titif, et de combiner et construire des fonctions les unes avec et sur les autres. C'est ainsi que, gr\u00e2ce \u00e0 certains programmeurs, votre ordinateur peut comprendre un langage de haut niveau comme python, alors qu'\u00e0 la base il ne peut comprendre que l'assemblage. Voyons comment utiliser cet outil incroyable sur python. Exercice 2 D\u00e9finir une fonction avec un param\u00e8tre n qui calcule et retourne le nombre d'or en utilisant les n i\u00e8me et n+1 i\u00e8me nombres de fibonacci.","title":"Fonctions"},{"location":"introPython/#conditions","text":"Dans nos programmes, en fonction de certaines variables, parfois nous voulons faire des choses, parfois nous ne le faisons pas. Pour cela, le dernier ingr\u00e9dient qui nous manque dans notre arsenal d'outils est la condition. Les conditions sont assez simples et nous les utilisons tous les jours : Est-ce qu'il pleut ? Oui/Non => Prenez un parapluie/ne le prenez pas. Notez qu'en informatique, les conditions sont compos\u00e9es de : un test aboutissant \u00e0 un bool\u00e9en (Vrai ou Faux), ce qu'il faut faire si le test est Vrai, et parfois ce qu'il faut faire s'il ne l'est pas. Exercice 3 Modifiez le code en suivant les instructions qu'il contient.","title":"Conditions"},{"location":"introPython/#listes","text":"Quand vous vous pr\u00e9parez pour aller faire des courses (ou que vos parents le font), que faites-vous ? Vous prenez autant de bout de papier que vous avez d'achats \u00e0 faire, ou bien vous prenez un seul bout de papier sur lequel vous notez tout ? J'esp\u00e8re que vous utilisez la deuxi\u00e8me option, pour vos poches et la plan\u00e8te. En programmation c'est pareil. Si on a une liste d'\u00e9l\u00e9ments \u00e0 retenir sur lesquels nous devons faire les m\u00eames types d'op\u00e9ration, souvent on n'utilisera pas plusieurs variables mais seulement une seule liste. Exercice 4 Dans l'exercice pr\u00e9c\u00e9dent nous avons utilis\u00e9 la fonction int() pour convertir une chaine de caract\u00e8re en entier. Pour d\u00e9couvrir l'utilisation des listes, reprogrammez la fonction int() que nous appelerons str_to_int(s) . Utilisez pour cela la chaine de caract\u00e8re fournine en argument comme une liste de caract\u00e8res. Acc\u00e9der pour cela \u00e0 chacun des caract\u00e8res \u00e0 l'aide des crochets ([]). Vous pourrez \u00e9galement utiliser la fonction ord() qui retourne le nombre entier correspondant \u00e0 l'Unicode d'un caract\u00e8re.","title":"Listes"},{"location":"introPython/#aller-plus-loin","text":"Exercice de math\u00e9matiques Allez sur le site repl et faites un programme pour calculer les nombres pi et e en utilisant des suites.","title":"Aller plus loin"},{"location":"introPython/#conclusion","text":"Vous voici maintenant \u00e9quip\u00e9 pour vous attaquer \u00e0 de plus gros projets de programmation.","title":"Conclusion"},{"location":"introScratch/","text":"Casse Brique - Introduction \u00e0 Scratch On nous parle de plus en plus d'algorithmes et de programmation, mais c'est quoi au juste tout \u00e7a et comment \u00e7a marche ? En r\u00e9alisant ce projet vous d\u00e9couvrirez ce qui se cache derri\u00e8re ces mots et bien plus. Si vous n'avez jamais programm\u00e9 en Scratch (ou jamais programm\u00e9 du tout), vous aurez l'occasion d'\u00e9crire votre premier programme, cela afin de cr\u00e9er vous-m\u00eame le jeu casse briques, un classique parmi les jeux vid\u00e9o. Il vous permettra de d\u00e9couvrir les constituants de bases de tous les programmes qui sont de plus en plus pr\u00e9sent dans notre quotidien. Definition 1: Algorithme et programme Un algorithme est une strat\u00e9gie qui est d\u00e9finie de fa\u00e7on non-ambigu\u00eb pour r\u00e9soudre un probl\u00e8me. Un algorithme est compr\u00e9hensible par les humains (du moins par beaucoup d'entre eux). Si nous voulons que ce probl\u00e8me soit r\u00e9solu par une machine, alors il va falloir traduire cet algorithme en programme \u00e0 l'aide d'un langage compr\u00e9hensible par la machine. Il y a tellement \u00e0 dire sur la cr\u00e9ation de jeux vid\u00e9o, autant d'un point de vue informatique que psychologique. On pourrait s'int\u00e9resser par exemple \u00e0 la question de \"Qu'est-ce qui nous donne du plaisir \u00e0 jouer et qui nous donne envie de continuer?\". Mon objectif \u00e9tant de faire une introduction rapide \u00e0 scratch, je ne toucherais cependant pas \u00e0 ce sujet aussi pationnants qu'ils soient. Pr\u00e9-requis Pour suivre cette activit\u00e9, vous n'aurez besoin d'aucun pr\u00e9-requis. Tout ce qu'il vous faudra c'est de la concentration. Ne vous fiez pas juste \u00e0 l'apparence de Scratch. Derri\u00e8re cette allure enfantine il peut donner lieu \u00e0 de jolis casse-t\u00eates ! D\u00e9couverte de Scratch Figure 1: Scratch et son interface. Pour commencer, inscrivez-vous sur Scratch . Une fois que c'est fait, cr\u00e9ez un nouveau projet. Vous devriez alors vous retrouver sur une page identique \u00e0 celle pr\u00e9sent\u00e9e en Figure 1. Que trouvons-nous dans cette page: l' encadr\u00e9 1 donne acc\u00e8s \u00e0 des outils qui permettent de naviguer en dehors de notre projet, mais surtout d'agir sur notre projet tout entier. Le globe permet par exemple de choisir dans quel langue nous voulons travailler. Le menu File ou Fichier permet entre-autres de sauvegarder le projet sur le cloud ou sur notre ordinateur, ce que je vous invite \u00e0 faire avant de quitter scratch si vous ne voulez pas perdre votre pr\u00e9cieux travail. Pour comprendre le reste des encadr\u00e9s, imaginez que scratch permet de monter un spectacle o\u00f9 le metteur en sc\u00e8ne c'est vous. L' encadr\u00e9 2 correspond \u00e0 la sc\u00e8ne de ce spectacle. Vous pourrez y placer vos acteurs comme bon vous semble, et vous pourrez voir le spectacle se'y d\u00e9rouler apr\u00e8s avoir donn\u00e9 le script \u00e0 chaque acteur. L' encadr\u00e9 3 va vous permettre de d\u00e9finir le d\u00e9cors de votre spectacle ainsi que les diff\u00e9rents acteurs pr\u00e9sents. Les acteurs dans Scratch sont appel\u00e9s Sprite (anglais pour lutin). Enfin l' encadr\u00e9 4 va vous permettre de d\u00e9finir l'apparence (les apparences) de chacun sous l'onglet Costumes et le script de chacun: quel acteur va faire quoi \u00e0 quel moment. C'est ici que nous allons programmer. Pour programmer en scratch, c'est bien simple: on va principalement glisser des blocs et les emboiter les uns \u00e0 la suite des autres. L'avantage de ce type de programmation, c'est que les fautes de syntaxes (\u00e9quivalent des fautes d'orthographes en fran\u00e7ais) n'existent pas, ce qui va vraiment nous simplifier la vie dans nos premiers pas en programmation ! Exercice 1 Le programme de Sprite1 (le sprite par d\u00e9faut) est vide actuellement. Modifiez le pour qu'il avance de 10 pas quand le drapeau vert est cliqu\u00e9. Pour cela vous aurez besoin d'un bloc de type \u00c9v\u00e9nements et d'un bloc de type Mouvement . Solution exercice 1 En emboitant le bloc avancer de 10 pas \u00e0 la suite d'un bloc quand drapeau est cliqu\u00e9 , vous avez \u00e9crit votre premier programme en Scrath pour r\u00e9soudre le probl\u00e8me pos\u00e9. Cliquez sur le drapeau vert et observez que le sprite r\u00e9alise le programme qui lui a \u00e9t\u00e9 donn\u00e9. Exercice 2 Modifiez votre programme pour que le sprite fasse quelque chose de surprenant. L\u00e2chez-vous ! Une solution \u00e0 l'exercice 2 Maintenant que vous \u00eates familiaris\u00e9 avec l'interface scratch, voyons ensemble comment cr\u00e9er un jeu \u00e0 partir de cela et quel concepts informatiques se cachent derri\u00e8re. Si vous en avez l'envie, n'h\u00e9sitez pas \u00e0 prendre un moment pour r\u00e9fl\u00e9chir aux diff\u00e9rentes \u00e9tapes que vous mettriez en place pour r\u00e9aliser un tel projet. Si vous pr\u00e9f\u00e9rez vous focaliser sur la programmation alors continuez \u00e0 lire. Raquette Figure 2: Objectif final: La raquette suit la souris. Dans le casse briques, 3 acteurs sont sur la sc\u00e8ne: la raquette, la balle et les briques. Voyons d'abord comment programmer la raquette puisqu'elle nous permettra de r\u00e9investir ce que nous venons de voir au sujet de l'interface, tout en commen\u00e7ant avec un programme simple. Exercice 3 Modifiez le fond d'\u00e9cran comme bon vous semble et d\u00e9finissez le programme de la raquette pour qu'elle suive la souris horizontalement. Pour cela vous aurez besoin d'un \u00e9v\u00e9nement d\u00e9clencheur (le drapeau), d'un bloc contr\u00f4le et d'un bloc mouvement . Solution exercice 3 Ici, y qui correspond \u00e0 la position verticale de notre sprite. Comme 0 correspond au milieu de la sc\u00e8ne et -180 au bas, on fixe y \u00e0 -160. Ce premier exercice nous permet de d\u00e9couvrir 3 \u00e9l\u00e9ments essentiels en programmation: les instructions : les programmes sont constitu\u00e9s de s\u00e9quences d'instructions. Chacune correspond \u00e0 une action que l'ordinateur doit r\u00e9aliser. Ici nous avonns utilis\u00e9 l'instruction \"aller \u00e0 x:... y:...\" qui nous permet de d\u00e9placer notre sprite \u00e0 la position que nous souhaitons. les \u00e9v\u00e9nements : De nombreux langages de programmation sont dits s\u00e9quentiels: ils suivent une s\u00e9quence d'instructions de mani\u00e8re chronologique. D'autres comme scratch sont \u00e9v\u00e9nementiels: les instructions sont ex\u00e9cut\u00e9es en fonction d'\u00e9v\u00e9nements d\u00e9clencheurs. En scratch on pourra ainsi facilement \u00e9crire un programme qui fera deux choses en m\u00eame temps (du moins nous donner cette impression) quand le drapeau sera cliqu\u00e9. Pour cela il suffira d'\u00e9crire deux sous-programmes commen\u00e7ant par l'\u00e9v\u00e9nement drapeau. les boucles : pour programmer la raquette afin qu'elle aille \u00e0 la position de la souris, puis qu'elle aille \u00e0 la position de la souris, puis qu'elle aille \u00e0 la position de la souris... nous aurions pu dupliquer le bloc mouvement et le coller un infinit\u00e9 de fois \u00e0 la suite de mon \u00e9v\u00e9nement. Cela nous aurait demand\u00e9 de cliquer... une infinit\u00e9 de fois. Heureusement les boucles permettent de faire cela pour nous et nous permettent de nous faciliter la vie, d'\u00e9viter les r\u00e9p\u00e9titions superflues et de rendre notre programme plus lisible. Balle Figure 3: Objectif final: La balle suit la raquette. Quand je clique sur la raquette la balle est lanc\u00e9e et rebondit sur les murs et la raquette. Si la balle touche le bas de la sc\u00e8ne, le fond est chang\u00e9 pour montrer \"Game Over\" et tout s'arr\u00eate. Lorsque le jeu commence la balle doit rester sur la raquette. Quel programme donner \u00e0 la balle ? Jusqu'\u00e0 maintenant rien de nouveau. On peut \u00e9crire le m\u00eame programme que celui de la raquette, \u00e0 la diff\u00e9rence de la valeur y du bloc aller \u00e0 ... . En effet puisque la raquette suit la souris, pour que la balle suive la raquette on peut simplement la programmer \u00e0 suivre la souris. Le probl\u00e8me est plus int\u00e9ressant lorsqu'on ajoute maintenant pour objectif que la balle doit \u00eatre lanc\u00e9e quand la raquette est cliqu\u00e9e. Et attention: la balle n'est lanc\u00e9e que si elle \u00e9tait sur la raquette ! Deux \u00e9tats D\u00e9composons le probl\u00e8me: d'abord voyons comment programmer la balle pour qu'elle se d\u00e9place, puis comment g\u00e9rer la transition de la balle qui suit la raquette, \u00e0 la balle qui se d\u00e9place sur la sc\u00e8ne apr\u00e8s son lancement. Exercice 4 \u00c9crire un programme pour que la balle se d\u00e9place suivant une ligne droite dans la sc\u00e8ne et qu'elle rebondisse sur les bords. Pour cela vous aurez bien s\u00fbr besoin de l'\u00e9v\u00e9nement drapeau , auquel vous pourrez ajouter un bloc contr\u00f4le et deux blocs de type mouvement . Solution exercice 4 Nous avons \u00e0 pr\u00e9sent d\u00e9fini deux programmes: l'un qui nous permet d'avoir la balle qui suit la raquette (ou en vrai la souris) et l'autre qui permet d'avoir la balle en mouvement dans notre sc\u00e8ne. Question Puisque la balle doit d'abord suivre la raquette puis se d\u00e9placer sur la sc\u00e8ne et rebondir, puis-je simplement combiner mes deux programmes ? R\u00e9ponse La r\u00e9ponse est non: 1. Si je mets une boucle infinie suivie d'une autre boucle infinie, la deuxi\u00e8me sera ignor\u00e9e car le programme restera dans la premi\u00e8re. C'est pour cela qu'il n'est pas possible d'imbriquer de bloc \u00e0 la suite d'une boucle infinie dans Scratch comme le montre la figure ci-dessus; 2. Si j'avais mis mes deux programmes ensemble, les deux s'ex\u00e9cuteraient en m\u00eame temps quand le drapeau est cliqu\u00e9 et la boucle de suivi de souris l'emporterait sur l'autre ce qui ne r\u00e9soudrait pas notre probl\u00e8me. Pour r\u00e9soudre notre probl\u00e8me, il nous manque deux \u00e9l\u00e9ments primordiaux \u00e0 beaucoup d'algorithmes et de programmes: les variables : elles jouent souvent le r\u00f4le de m\u00e9moire. Par exemple dans notre jeu, nous ne souhaitons pas seulement que mon programme fasse quelque chose quand la raquette a \u00e9t\u00e9 cliqu\u00e9e, nous voulons aussi pouvoir nous souvenir que cela est arriv\u00e9. Pour cela nous allons d\u00e9finir une variable nomm\u00e9e \u00c9tat , qui sera initialis\u00e9e \u00e0 \"Init\" au d\u00e9but du programme et que l'on modifiera \u00e0 \"Jeu\" quand la raquette sera cliqu\u00e9e. Comme on peut le voir dans cet exemple, une variable a un nom et elle contient une information qui peut \u00eatre modifi\u00e9e et lue. les conditions : il va falloir que notre balle suive la raquette si la variable \u00c9tat a pour valeur \"Init\" et qu'elle se d\u00e9place en rebondissant si \u00c9tat a pour valeur \"Jeu\". On appelle cela des instructions conditionnelles: ce sont des instructions qui ne seront r\u00e9alis\u00e9es que si une condition que l'on a d\u00e9finie est vraie. Dans un test on a donc au moins deux \u00e9l\u00e9ments essentiels: une question/condition qui ne peut \u00eatre r\u00e9pondue que par \"oui\" ou \"non\" (on parlera de bool\u00e9en dans le milieu de l'informatique) et les instructions \u00e0 r\u00e9aliser si la r\u00e9ponse est \"oui\". Exercice 5 \u00c9crire un programme pour que la balle suive la raquette au d\u00e9but du programme, puis, apr\u00e8s un clic sur la raquette, qu'elle se d\u00e9place diagonalement dans la sc\u00e8ne et rebondisse. Pour cela vous aurez besoin des blocs de type variables , contr\u00f4le et op\u00e9rateurs . Remarquez les diff\u00e9rentes formes de blocs. Dans le bloc \"si alors\" on ne peut qu'imbriquer des blocs losanges apr\u00e8s le si. Pourquoi ? Parce qu'apr\u00e8s le \"si\", comme on l'a vu pr\u00e9c\u00e9dement, on ne peut avoir qu'une expression qui retourne \"oui\" ou \"non\", et c'est ce que font ces blocs losange. Vous trouverez des blocs de ce type dans les Op\u00e9rateurs . Solution exercice 5 Dans le bloc losange \" ... = ... \" on a imbriqu\u00e9 le bloc variable \u00c9tat d'un c\u00f4t\u00e9 et tap\u00e9 la valeur \"Init\" ou \"Jeu\" de l'autre c\u00f4t\u00e9. Encore une fois on peut remarquer la forme sp\u00e9ciale de ces blocs qui est cette fois-ci arrondie. Ces blocs arrondis correspondent \u00e0 des informations qui peuvent \u00eatre de diff\u00e9rents types (texte ou nombres). Dans ce cas le bloc arrondi \"\u00c9tat\" renvoie la valeur qui est m\u00e9moris\u00e9e dans la variable. Ainsi, si je devais traduire la premi\u00e8re condition qui appara\u00eet dans ce programme en fran\u00e7ais, je le traduirais comme \"Si la variable \u00c9tat a pour valeur Init alors...\". Remarquez \u00e9galement qu'un bloc \"s'orienter \u00e0 30\u00b0\" a \u00e9t\u00e9 ajout\u00e9 pour que la balle se d\u00e9place en diagonale. Trois \u00e9tats Il ne manque maintenant plus qu'\u00e0 faire rebondir la balle sur la raquette, et \u00e0 arr\u00eater le jeu lorsque la balle touche le bas de la sc\u00e8ne. Pour cela nous allons d\u00e9couvrir les blocs de type \"capteurs\". En robotique, il est possible d'\u00e9quiper les robots de capteurs pour qu'ils puissent percevoir des informations de leur environnement. Dans scratch, nos sprites aussi sont \u00e9quip\u00e9s de capteurs. Ainsi un sprite pourra savoir sa position dans l'espace, savoir quand il est touch\u00e9 par un autre sprite et bien d'autres informations. Exercice 6 Modifier le programme de la balle en utilisant ses capteurs pour que celle-ci rebondisse sur la raquette et pour afficher Game Over et que tout s'arr\u00eate quand la raquette manque la balle. Pour cela vous mettrez la valeur \"Over\" dans la variable \u00c9tat . Solution exercice 6 Remarquez ici l'utilisation du bloc \"GestionD\u00e9placement\". Vous n'avez normalement pas ce bloc. Pourquoi ? Parce que c'est un bloc que j'ai cr\u00e9\u00e9 moi m\u00eame et que je vous invite \u00e0 cr\u00e9er \u00e9galement gr\u00e2ce aux types de blocs \"Mes Blocs\". Dans cette cat\u00e9gorie vous trouverez un bouton \"Cr\u00e9er un bloc\" qui vous permettra de cr\u00e9er un bloc du nom que vous souhaitez. Pour quoi faire? Parce que \u00e7a me permet de faire tenir mon programme dans un imprim-\u00e9cran, mais pas seulement ! Cr\u00e9er un bloc en scratch, correspond en informatique \u00e0 la cr\u00e9ation d'une proc\u00e9dure . Dans le programme ci-dessus \u00e0 droite vous pouvez voir la d\u00e9finition de la fonction \"GestionD\u00e9placement\", qui d\u00e9finit ce qui sera ex\u00e9cut\u00e9 quand la fonction sera appell\u00e9e. A gauche la fonction est appell\u00e9e. Les proc\u00e9dures sont utiles pour r\u00e9soudre un probl\u00e8me en le d\u00e9composant, ce qui est primordial en pens\u00e9e informatique. Dans le cas pr\u00e9sent, j'ai voulu r\u00e9soudre mon probl\u00e8me de gestion du d\u00e9placement et j'ai donc cr\u00e9\u00e9 la fonction pour le r\u00e9soudre. Un autre avantage est que si j'ai un probl\u00e8me avec mon d\u00e9placement au moment de l'ex\u00e9cution de mon programme, je sais maintenant exactement o\u00f9 regarder. Si vous avez r\u00e9ussi \u00e0 r\u00e9soudre l'exercice pr\u00e9c\u00e9dent sans regarder la solution je vous en f\u00e9licite. Je vous invite cependant \u00e0 regarder tout de m\u00eame la solution pour d\u00e9couvrir l'usage des proc\u00e9dures qui est le dernier \u00e9l\u00e9ment essentiel \u00e0 la plupart des programmes informatiques. Briques Figure 4: Objectif final: le jeu casse briques ! Nous voil\u00e0 presque \u00e0 la fin de notre programme. Dans cette derni\u00e8re partie nous allons d\u00e9couvrir l'utilisation des boucles classiques (c'est-\u00e0-dire pas infinies), et une particularit\u00e9 vraiment sympa de scratch qui est la cr\u00e9ation de clones. Vous verrez que le programme est tr\u00e8s court mais qu'il demande un exercice de pens\u00e9e un peu particulier... Exercice 7 Cr\u00e9er un nouveau sprite nomm\u00e9 \"Brique\". En utilisant entre autres une boucle \"R\u00e9p\u00e9ter ... fois\", l'instruction Contr\u00f4le \"cr\u00e9er un clone de moi-m\u00eame\" et l'instruction \"aller \u00e0 x:...,y:...\", cr\u00e9er un mur de 6 briques de large et d'une brique de haut quand le drapeau est appuy\u00e9. Solution exercice 7 Si vous n'avez pas r\u00e9solu le probl\u00e8me sans regarder, prenez un morceau de papier et essayez de simuler le programme ci-dessus. Apr\u00e8s l'ex\u00e9cution de ce programme, combien de briques y \u00e0 t'il ? Exercice 8 Modifier maintenant votre programme pour que votre mur soit toujours cr\u00e9\u00e9 \u00e0 la m\u00eame place et qu'il soit de 3 briques de haut. Utilisez pour cela une boucle imbriqu\u00e9e , c'est-\u00e0-dire une boucle dans une boucle. Solution exercice 8 Exercice 9 Enfin modifiez votre programme pour que la balle casse les briques tout en rebondissant dessus. Solution exercice 9 Dans la solution que je propose ici, j'ai utilis\u00e9 la fonction \"Envoyer \u00e0 tous rebond \". J'ai aussi ajout\u00e9 un bloc \"quand je re\u00e7ois Rebond\" dans le programme de ma balle que je ne montre pas ici. J'aurais pu ajouter une condition \"si touche brique\" dans le programme de ma balle, cependant, puisque le programme de la balle et celui de ma brique tournent en parall\u00e8le, si j'avais choisi cette deuxi\u00e8me option, alors il serait probable que le clone de ma brique soit supprim\u00e9 avant que ma condition de balle soit test\u00e9e. Ainsi il serait possible que ma balle ne rebondisse pas \u00e0 chaque fois contre les briques. Comme mes explications commencent \u00e0 \u00eatre longue je les arr\u00eate l\u00e0 et je vous invite \u00e0 prendre le temps de bien lire ce programme afin de comprendre pourquoi j'ai utilis\u00e9 les instructions \"cacher\" et \"montrer\" comme je l'ai fait. Conclusion Vous voil\u00e0 \u00e0 la fin de cette activit\u00e9 de programmation. Merci de vous \u00eatre accroch\u00e9 jusqu'au bout. Nous pourrions am\u00e9liorer notre jeu de bien des fa\u00e7ons encore. Ma mission \u00e0 moi qui \u00e9tait de vous faire d\u00e9couvrir la programmation en scratch est cependant achev\u00e9e. Je me limiterais donc dans cette conclusion \u00e0 vous proposer des pistes pour aller plus loin. Pour cela vous pourriez modifier votre programme pour: Que plus le temps passe plus la balle acc\u00e9l\u00e8re (simple). Calculer et afficher un score (simple). Faire varier l'angle de rebond de la balle sur la raquette en fonction d'o\u00f9 le contact se fait (mod\u00e9r\u00e9). G\u00e9rer le rebond de la balle sur les bords des briques (difficile). Ajotuer des niveaux avec diff\u00e9rentes configurations de briques (difficile) Enfin vous pourriez bien sur essayer de programmer d'autres jeux. Essayez par exemple d'en programmer un auquel vous avez d\u00e9j\u00e0 jou\u00e9 ! De mon c\u00f4t\u00e9 je me suis bien amus\u00e9 \u00e0 reprogrammer Fruit Ninja. Je trouve g\u00e9nial de faire voler des fruits dans tous les sens tout \u00e7a en quelques lignes! Pour trouver diff\u00e9rents exemple de ce type en scratch je vous conseille fortement ce guide qui est assez facile \u00e0 lire, bien qu'en anglais.","title":"Casse Briques"},{"location":"introScratch/#casse-brique-introduction-a-scratch","text":"On nous parle de plus en plus d'algorithmes et de programmation, mais c'est quoi au juste tout \u00e7a et comment \u00e7a marche ? En r\u00e9alisant ce projet vous d\u00e9couvrirez ce qui se cache derri\u00e8re ces mots et bien plus. Si vous n'avez jamais programm\u00e9 en Scratch (ou jamais programm\u00e9 du tout), vous aurez l'occasion d'\u00e9crire votre premier programme, cela afin de cr\u00e9er vous-m\u00eame le jeu casse briques, un classique parmi les jeux vid\u00e9o. Il vous permettra de d\u00e9couvrir les constituants de bases de tous les programmes qui sont de plus en plus pr\u00e9sent dans notre quotidien. Definition 1: Algorithme et programme Un algorithme est une strat\u00e9gie qui est d\u00e9finie de fa\u00e7on non-ambigu\u00eb pour r\u00e9soudre un probl\u00e8me. Un algorithme est compr\u00e9hensible par les humains (du moins par beaucoup d'entre eux). Si nous voulons que ce probl\u00e8me soit r\u00e9solu par une machine, alors il va falloir traduire cet algorithme en programme \u00e0 l'aide d'un langage compr\u00e9hensible par la machine. Il y a tellement \u00e0 dire sur la cr\u00e9ation de jeux vid\u00e9o, autant d'un point de vue informatique que psychologique. On pourrait s'int\u00e9resser par exemple \u00e0 la question de \"Qu'est-ce qui nous donne du plaisir \u00e0 jouer et qui nous donne envie de continuer?\". Mon objectif \u00e9tant de faire une introduction rapide \u00e0 scratch, je ne toucherais cependant pas \u00e0 ce sujet aussi pationnants qu'ils soient.","title":"Casse Brique - Introduction \u00e0 Scratch"},{"location":"introScratch/#pre-requis","text":"Pour suivre cette activit\u00e9, vous n'aurez besoin d'aucun pr\u00e9-requis. Tout ce qu'il vous faudra c'est de la concentration. Ne vous fiez pas juste \u00e0 l'apparence de Scratch. Derri\u00e8re cette allure enfantine il peut donner lieu \u00e0 de jolis casse-t\u00eates !","title":"Pr\u00e9-requis"},{"location":"introScratch/#decouverte-de-scratch","text":"Figure 1: Scratch et son interface. Pour commencer, inscrivez-vous sur Scratch . Une fois que c'est fait, cr\u00e9ez un nouveau projet. Vous devriez alors vous retrouver sur une page identique \u00e0 celle pr\u00e9sent\u00e9e en Figure 1. Que trouvons-nous dans cette page: l' encadr\u00e9 1 donne acc\u00e8s \u00e0 des outils qui permettent de naviguer en dehors de notre projet, mais surtout d'agir sur notre projet tout entier. Le globe permet par exemple de choisir dans quel langue nous voulons travailler. Le menu File ou Fichier permet entre-autres de sauvegarder le projet sur le cloud ou sur notre ordinateur, ce que je vous invite \u00e0 faire avant de quitter scratch si vous ne voulez pas perdre votre pr\u00e9cieux travail. Pour comprendre le reste des encadr\u00e9s, imaginez que scratch permet de monter un spectacle o\u00f9 le metteur en sc\u00e8ne c'est vous. L' encadr\u00e9 2 correspond \u00e0 la sc\u00e8ne de ce spectacle. Vous pourrez y placer vos acteurs comme bon vous semble, et vous pourrez voir le spectacle se'y d\u00e9rouler apr\u00e8s avoir donn\u00e9 le script \u00e0 chaque acteur. L' encadr\u00e9 3 va vous permettre de d\u00e9finir le d\u00e9cors de votre spectacle ainsi que les diff\u00e9rents acteurs pr\u00e9sents. Les acteurs dans Scratch sont appel\u00e9s Sprite (anglais pour lutin). Enfin l' encadr\u00e9 4 va vous permettre de d\u00e9finir l'apparence (les apparences) de chacun sous l'onglet Costumes et le script de chacun: quel acteur va faire quoi \u00e0 quel moment. C'est ici que nous allons programmer. Pour programmer en scratch, c'est bien simple: on va principalement glisser des blocs et les emboiter les uns \u00e0 la suite des autres. L'avantage de ce type de programmation, c'est que les fautes de syntaxes (\u00e9quivalent des fautes d'orthographes en fran\u00e7ais) n'existent pas, ce qui va vraiment nous simplifier la vie dans nos premiers pas en programmation ! Exercice 1 Le programme de Sprite1 (le sprite par d\u00e9faut) est vide actuellement. Modifiez le pour qu'il avance de 10 pas quand le drapeau vert est cliqu\u00e9. Pour cela vous aurez besoin d'un bloc de type \u00c9v\u00e9nements et d'un bloc de type Mouvement . Solution exercice 1 En emboitant le bloc avancer de 10 pas \u00e0 la suite d'un bloc quand drapeau est cliqu\u00e9 , vous avez \u00e9crit votre premier programme en Scrath pour r\u00e9soudre le probl\u00e8me pos\u00e9. Cliquez sur le drapeau vert et observez que le sprite r\u00e9alise le programme qui lui a \u00e9t\u00e9 donn\u00e9. Exercice 2 Modifiez votre programme pour que le sprite fasse quelque chose de surprenant. L\u00e2chez-vous ! Une solution \u00e0 l'exercice 2 Maintenant que vous \u00eates familiaris\u00e9 avec l'interface scratch, voyons ensemble comment cr\u00e9er un jeu \u00e0 partir de cela et quel concepts informatiques se cachent derri\u00e8re. Si vous en avez l'envie, n'h\u00e9sitez pas \u00e0 prendre un moment pour r\u00e9fl\u00e9chir aux diff\u00e9rentes \u00e9tapes que vous mettriez en place pour r\u00e9aliser un tel projet. Si vous pr\u00e9f\u00e9rez vous focaliser sur la programmation alors continuez \u00e0 lire.","title":"D\u00e9couverte de Scratch"},{"location":"introScratch/#raquette","text":"Figure 2: Objectif final: La raquette suit la souris. Dans le casse briques, 3 acteurs sont sur la sc\u00e8ne: la raquette, la balle et les briques. Voyons d'abord comment programmer la raquette puisqu'elle nous permettra de r\u00e9investir ce que nous venons de voir au sujet de l'interface, tout en commen\u00e7ant avec un programme simple. Exercice 3 Modifiez le fond d'\u00e9cran comme bon vous semble et d\u00e9finissez le programme de la raquette pour qu'elle suive la souris horizontalement. Pour cela vous aurez besoin d'un \u00e9v\u00e9nement d\u00e9clencheur (le drapeau), d'un bloc contr\u00f4le et d'un bloc mouvement . Solution exercice 3 Ici, y qui correspond \u00e0 la position verticale de notre sprite. Comme 0 correspond au milieu de la sc\u00e8ne et -180 au bas, on fixe y \u00e0 -160. Ce premier exercice nous permet de d\u00e9couvrir 3 \u00e9l\u00e9ments essentiels en programmation: les instructions : les programmes sont constitu\u00e9s de s\u00e9quences d'instructions. Chacune correspond \u00e0 une action que l'ordinateur doit r\u00e9aliser. Ici nous avonns utilis\u00e9 l'instruction \"aller \u00e0 x:... y:...\" qui nous permet de d\u00e9placer notre sprite \u00e0 la position que nous souhaitons. les \u00e9v\u00e9nements : De nombreux langages de programmation sont dits s\u00e9quentiels: ils suivent une s\u00e9quence d'instructions de mani\u00e8re chronologique. D'autres comme scratch sont \u00e9v\u00e9nementiels: les instructions sont ex\u00e9cut\u00e9es en fonction d'\u00e9v\u00e9nements d\u00e9clencheurs. En scratch on pourra ainsi facilement \u00e9crire un programme qui fera deux choses en m\u00eame temps (du moins nous donner cette impression) quand le drapeau sera cliqu\u00e9. Pour cela il suffira d'\u00e9crire deux sous-programmes commen\u00e7ant par l'\u00e9v\u00e9nement drapeau. les boucles : pour programmer la raquette afin qu'elle aille \u00e0 la position de la souris, puis qu'elle aille \u00e0 la position de la souris, puis qu'elle aille \u00e0 la position de la souris... nous aurions pu dupliquer le bloc mouvement et le coller un infinit\u00e9 de fois \u00e0 la suite de mon \u00e9v\u00e9nement. Cela nous aurait demand\u00e9 de cliquer... une infinit\u00e9 de fois. Heureusement les boucles permettent de faire cela pour nous et nous permettent de nous faciliter la vie, d'\u00e9viter les r\u00e9p\u00e9titions superflues et de rendre notre programme plus lisible.","title":"Raquette"},{"location":"introScratch/#balle","text":"Figure 3: Objectif final: La balle suit la raquette. Quand je clique sur la raquette la balle est lanc\u00e9e et rebondit sur les murs et la raquette. Si la balle touche le bas de la sc\u00e8ne, le fond est chang\u00e9 pour montrer \"Game Over\" et tout s'arr\u00eate. Lorsque le jeu commence la balle doit rester sur la raquette. Quel programme donner \u00e0 la balle ? Jusqu'\u00e0 maintenant rien de nouveau. On peut \u00e9crire le m\u00eame programme que celui de la raquette, \u00e0 la diff\u00e9rence de la valeur y du bloc aller \u00e0 ... . En effet puisque la raquette suit la souris, pour que la balle suive la raquette on peut simplement la programmer \u00e0 suivre la souris. Le probl\u00e8me est plus int\u00e9ressant lorsqu'on ajoute maintenant pour objectif que la balle doit \u00eatre lanc\u00e9e quand la raquette est cliqu\u00e9e. Et attention: la balle n'est lanc\u00e9e que si elle \u00e9tait sur la raquette !","title":"Balle"},{"location":"introScratch/#deux-etats","text":"D\u00e9composons le probl\u00e8me: d'abord voyons comment programmer la balle pour qu'elle se d\u00e9place, puis comment g\u00e9rer la transition de la balle qui suit la raquette, \u00e0 la balle qui se d\u00e9place sur la sc\u00e8ne apr\u00e8s son lancement. Exercice 4 \u00c9crire un programme pour que la balle se d\u00e9place suivant une ligne droite dans la sc\u00e8ne et qu'elle rebondisse sur les bords. Pour cela vous aurez bien s\u00fbr besoin de l'\u00e9v\u00e9nement drapeau , auquel vous pourrez ajouter un bloc contr\u00f4le et deux blocs de type mouvement . Solution exercice 4 Nous avons \u00e0 pr\u00e9sent d\u00e9fini deux programmes: l'un qui nous permet d'avoir la balle qui suit la raquette (ou en vrai la souris) et l'autre qui permet d'avoir la balle en mouvement dans notre sc\u00e8ne. Question Puisque la balle doit d'abord suivre la raquette puis se d\u00e9placer sur la sc\u00e8ne et rebondir, puis-je simplement combiner mes deux programmes ? R\u00e9ponse La r\u00e9ponse est non: 1. Si je mets une boucle infinie suivie d'une autre boucle infinie, la deuxi\u00e8me sera ignor\u00e9e car le programme restera dans la premi\u00e8re. C'est pour cela qu'il n'est pas possible d'imbriquer de bloc \u00e0 la suite d'une boucle infinie dans Scratch comme le montre la figure ci-dessus; 2. Si j'avais mis mes deux programmes ensemble, les deux s'ex\u00e9cuteraient en m\u00eame temps quand le drapeau est cliqu\u00e9 et la boucle de suivi de souris l'emporterait sur l'autre ce qui ne r\u00e9soudrait pas notre probl\u00e8me. Pour r\u00e9soudre notre probl\u00e8me, il nous manque deux \u00e9l\u00e9ments primordiaux \u00e0 beaucoup d'algorithmes et de programmes: les variables : elles jouent souvent le r\u00f4le de m\u00e9moire. Par exemple dans notre jeu, nous ne souhaitons pas seulement que mon programme fasse quelque chose quand la raquette a \u00e9t\u00e9 cliqu\u00e9e, nous voulons aussi pouvoir nous souvenir que cela est arriv\u00e9. Pour cela nous allons d\u00e9finir une variable nomm\u00e9e \u00c9tat , qui sera initialis\u00e9e \u00e0 \"Init\" au d\u00e9but du programme et que l'on modifiera \u00e0 \"Jeu\" quand la raquette sera cliqu\u00e9e. Comme on peut le voir dans cet exemple, une variable a un nom et elle contient une information qui peut \u00eatre modifi\u00e9e et lue. les conditions : il va falloir que notre balle suive la raquette si la variable \u00c9tat a pour valeur \"Init\" et qu'elle se d\u00e9place en rebondissant si \u00c9tat a pour valeur \"Jeu\". On appelle cela des instructions conditionnelles: ce sont des instructions qui ne seront r\u00e9alis\u00e9es que si une condition que l'on a d\u00e9finie est vraie. Dans un test on a donc au moins deux \u00e9l\u00e9ments essentiels: une question/condition qui ne peut \u00eatre r\u00e9pondue que par \"oui\" ou \"non\" (on parlera de bool\u00e9en dans le milieu de l'informatique) et les instructions \u00e0 r\u00e9aliser si la r\u00e9ponse est \"oui\". Exercice 5 \u00c9crire un programme pour que la balle suive la raquette au d\u00e9but du programme, puis, apr\u00e8s un clic sur la raquette, qu'elle se d\u00e9place diagonalement dans la sc\u00e8ne et rebondisse. Pour cela vous aurez besoin des blocs de type variables , contr\u00f4le et op\u00e9rateurs . Remarquez les diff\u00e9rentes formes de blocs. Dans le bloc \"si alors\" on ne peut qu'imbriquer des blocs losanges apr\u00e8s le si. Pourquoi ? Parce qu'apr\u00e8s le \"si\", comme on l'a vu pr\u00e9c\u00e9dement, on ne peut avoir qu'une expression qui retourne \"oui\" ou \"non\", et c'est ce que font ces blocs losange. Vous trouverez des blocs de ce type dans les Op\u00e9rateurs . Solution exercice 5 Dans le bloc losange \" ... = ... \" on a imbriqu\u00e9 le bloc variable \u00c9tat d'un c\u00f4t\u00e9 et tap\u00e9 la valeur \"Init\" ou \"Jeu\" de l'autre c\u00f4t\u00e9. Encore une fois on peut remarquer la forme sp\u00e9ciale de ces blocs qui est cette fois-ci arrondie. Ces blocs arrondis correspondent \u00e0 des informations qui peuvent \u00eatre de diff\u00e9rents types (texte ou nombres). Dans ce cas le bloc arrondi \"\u00c9tat\" renvoie la valeur qui est m\u00e9moris\u00e9e dans la variable. Ainsi, si je devais traduire la premi\u00e8re condition qui appara\u00eet dans ce programme en fran\u00e7ais, je le traduirais comme \"Si la variable \u00c9tat a pour valeur Init alors...\". Remarquez \u00e9galement qu'un bloc \"s'orienter \u00e0 30\u00b0\" a \u00e9t\u00e9 ajout\u00e9 pour que la balle se d\u00e9place en diagonale.","title":"Deux \u00e9tats"},{"location":"introScratch/#trois-etats","text":"Il ne manque maintenant plus qu'\u00e0 faire rebondir la balle sur la raquette, et \u00e0 arr\u00eater le jeu lorsque la balle touche le bas de la sc\u00e8ne. Pour cela nous allons d\u00e9couvrir les blocs de type \"capteurs\". En robotique, il est possible d'\u00e9quiper les robots de capteurs pour qu'ils puissent percevoir des informations de leur environnement. Dans scratch, nos sprites aussi sont \u00e9quip\u00e9s de capteurs. Ainsi un sprite pourra savoir sa position dans l'espace, savoir quand il est touch\u00e9 par un autre sprite et bien d'autres informations. Exercice 6 Modifier le programme de la balle en utilisant ses capteurs pour que celle-ci rebondisse sur la raquette et pour afficher Game Over et que tout s'arr\u00eate quand la raquette manque la balle. Pour cela vous mettrez la valeur \"Over\" dans la variable \u00c9tat . Solution exercice 6 Remarquez ici l'utilisation du bloc \"GestionD\u00e9placement\". Vous n'avez normalement pas ce bloc. Pourquoi ? Parce que c'est un bloc que j'ai cr\u00e9\u00e9 moi m\u00eame et que je vous invite \u00e0 cr\u00e9er \u00e9galement gr\u00e2ce aux types de blocs \"Mes Blocs\". Dans cette cat\u00e9gorie vous trouverez un bouton \"Cr\u00e9er un bloc\" qui vous permettra de cr\u00e9er un bloc du nom que vous souhaitez. Pour quoi faire? Parce que \u00e7a me permet de faire tenir mon programme dans un imprim-\u00e9cran, mais pas seulement ! Cr\u00e9er un bloc en scratch, correspond en informatique \u00e0 la cr\u00e9ation d'une proc\u00e9dure . Dans le programme ci-dessus \u00e0 droite vous pouvez voir la d\u00e9finition de la fonction \"GestionD\u00e9placement\", qui d\u00e9finit ce qui sera ex\u00e9cut\u00e9 quand la fonction sera appell\u00e9e. A gauche la fonction est appell\u00e9e. Les proc\u00e9dures sont utiles pour r\u00e9soudre un probl\u00e8me en le d\u00e9composant, ce qui est primordial en pens\u00e9e informatique. Dans le cas pr\u00e9sent, j'ai voulu r\u00e9soudre mon probl\u00e8me de gestion du d\u00e9placement et j'ai donc cr\u00e9\u00e9 la fonction pour le r\u00e9soudre. Un autre avantage est que si j'ai un probl\u00e8me avec mon d\u00e9placement au moment de l'ex\u00e9cution de mon programme, je sais maintenant exactement o\u00f9 regarder. Si vous avez r\u00e9ussi \u00e0 r\u00e9soudre l'exercice pr\u00e9c\u00e9dent sans regarder la solution je vous en f\u00e9licite. Je vous invite cependant \u00e0 regarder tout de m\u00eame la solution pour d\u00e9couvrir l'usage des proc\u00e9dures qui est le dernier \u00e9l\u00e9ment essentiel \u00e0 la plupart des programmes informatiques.","title":"Trois \u00e9tats"},{"location":"introScratch/#briques","text":"Figure 4: Objectif final: le jeu casse briques ! Nous voil\u00e0 presque \u00e0 la fin de notre programme. Dans cette derni\u00e8re partie nous allons d\u00e9couvrir l'utilisation des boucles classiques (c'est-\u00e0-dire pas infinies), et une particularit\u00e9 vraiment sympa de scratch qui est la cr\u00e9ation de clones. Vous verrez que le programme est tr\u00e8s court mais qu'il demande un exercice de pens\u00e9e un peu particulier... Exercice 7 Cr\u00e9er un nouveau sprite nomm\u00e9 \"Brique\". En utilisant entre autres une boucle \"R\u00e9p\u00e9ter ... fois\", l'instruction Contr\u00f4le \"cr\u00e9er un clone de moi-m\u00eame\" et l'instruction \"aller \u00e0 x:...,y:...\", cr\u00e9er un mur de 6 briques de large et d'une brique de haut quand le drapeau est appuy\u00e9. Solution exercice 7 Si vous n'avez pas r\u00e9solu le probl\u00e8me sans regarder, prenez un morceau de papier et essayez de simuler le programme ci-dessus. Apr\u00e8s l'ex\u00e9cution de ce programme, combien de briques y \u00e0 t'il ? Exercice 8 Modifier maintenant votre programme pour que votre mur soit toujours cr\u00e9\u00e9 \u00e0 la m\u00eame place et qu'il soit de 3 briques de haut. Utilisez pour cela une boucle imbriqu\u00e9e , c'est-\u00e0-dire une boucle dans une boucle. Solution exercice 8 Exercice 9 Enfin modifiez votre programme pour que la balle casse les briques tout en rebondissant dessus. Solution exercice 9 Dans la solution que je propose ici, j'ai utilis\u00e9 la fonction \"Envoyer \u00e0 tous rebond \". J'ai aussi ajout\u00e9 un bloc \"quand je re\u00e7ois Rebond\" dans le programme de ma balle que je ne montre pas ici. J'aurais pu ajouter une condition \"si touche brique\" dans le programme de ma balle, cependant, puisque le programme de la balle et celui de ma brique tournent en parall\u00e8le, si j'avais choisi cette deuxi\u00e8me option, alors il serait probable que le clone de ma brique soit supprim\u00e9 avant que ma condition de balle soit test\u00e9e. Ainsi il serait possible que ma balle ne rebondisse pas \u00e0 chaque fois contre les briques. Comme mes explications commencent \u00e0 \u00eatre longue je les arr\u00eate l\u00e0 et je vous invite \u00e0 prendre le temps de bien lire ce programme afin de comprendre pourquoi j'ai utilis\u00e9 les instructions \"cacher\" et \"montrer\" comme je l'ai fait.","title":"Briques"},{"location":"introScratch/#conclusion","text":"Vous voil\u00e0 \u00e0 la fin de cette activit\u00e9 de programmation. Merci de vous \u00eatre accroch\u00e9 jusqu'au bout. Nous pourrions am\u00e9liorer notre jeu de bien des fa\u00e7ons encore. Ma mission \u00e0 moi qui \u00e9tait de vous faire d\u00e9couvrir la programmation en scratch est cependant achev\u00e9e. Je me limiterais donc dans cette conclusion \u00e0 vous proposer des pistes pour aller plus loin. Pour cela vous pourriez modifier votre programme pour: Que plus le temps passe plus la balle acc\u00e9l\u00e8re (simple). Calculer et afficher un score (simple). Faire varier l'angle de rebond de la balle sur la raquette en fonction d'o\u00f9 le contact se fait (mod\u00e9r\u00e9). G\u00e9rer le rebond de la balle sur les bords des briques (difficile). Ajotuer des niveaux avec diff\u00e9rentes configurations de briques (difficile) Enfin vous pourriez bien sur essayer de programmer d'autres jeux. Essayez par exemple d'en programmer un auquel vous avez d\u00e9j\u00e0 jou\u00e9 ! De mon c\u00f4t\u00e9 je me suis bien amus\u00e9 \u00e0 reprogrammer Fruit Ninja. Je trouve g\u00e9nial de faire voler des fruits dans tous les sens tout \u00e7a en quelques lignes! Pour trouver diff\u00e9rents exemple de ce type en scratch je vous conseille fortement ce guide qui est assez facile \u00e0 lire, bien qu'en anglais.","title":"Conclusion"},{"location":"simulateur/","text":"Simulateur en Scratch Quel est l'impact de nos actions sur la propagation d'un virus. Que se passerait-il si la moiti\u00e9 d'entre nous respections le confinement ? Que se passerait-il si chacun faisait plus attention aux normes d'hygi\u00e8ne ? Il nous est facile d'estimer la tendance de ces actions, par exemple de pr\u00e9dire que la propagation du virus sera plus rapide si nous respectons moins les normes d'hygi\u00e8ne, mais il nous est beaucoup plus difficile d'aller plus loin dans cette pr\u00e9diction pour aller vers du quantitatif par exemple et r\u00e9pondre \u00e0 la question \"Qu'est-ce qui se passerait si ... ?\". Pour prendre les bonnes d\u00e9cisions et minimiser les risques pris, des outils de pr\u00e9diction sont donc n\u00e9cessaires. Alors comment faire ces pr\u00e9dicitons ? On va pouvoir utiliser la puissance de calcul des ordinateurs qui nous permettront de programmer des simulateurs. Les simulations sont utiles dans le contexte de l'\u00e9tude d'une \u00e9pid\u00e9mie comme celle qui nous touche aujourd'hui, mais elles sont aussi utiles dans d'autres domaines tels que: L'\u00e9ducation, par exemple pour former des pilotes d'avion, La construction de batiments, par exemple pour tester l'ergonomie d'un nouveau projet, La m\u00e9canique, pour tester par exemple l'a\u00e9rodynamie de nos pi\u00e8ces, et bien d'autre: m\u00e9t\u00e9o, astronomie, \u00e9conomie, robotique, sport... Dans ce projet je vous propose de d\u00e9couvrir les \u00e9l\u00e9ments fondamentaux de ces simulateurs, tout en pratiquant vos comp\u00e9tences informatiques. Nous verrons entre autres que la capacit\u00e9 d'abstraction est primordiale \u00e0 la cr\u00e9ation d'un simulateur. Ce projet permet \u00e9galement de travailler le concept de variables priv\u00e9es et globales. Pr\u00e9-requis Pour suivre cette activit\u00e9, il vous sera n\u00e9cessaire de conna\u00eetre les bases de la programmation en scratch. Vous devrez ainsi id\u00e9alement avoir d\u00e9j\u00e0 programm\u00e9 dans ce langage et \u00eatre famili\u00e9 avec les concepts d'instruction, de condition, de boucle, de variable et de fonction. Comme Scratch a \u00e9t\u00e9 con\u00e7u pour les petits (attention cela n'emp\u00eache pas que l'on puisse aller tr\u00e8s loin avec !), la plupart des introductions \u00e0 Scratch peuvent \u00eatre assez lentes pour les plus ag\u00e9s. Pour vous familiariser \u00e0 Scratch de mani\u00e8re plus stimulante, je vous ai donc pr\u00e9par\u00e9 l'activit\u00e9 Casse Briques . Choix de mod\u00e9lisation Pour commencer, nous allons devoir r\u00e9pondre \u00e0 la question: \"Que dois-je simuler ?\" que nous pourrions aussi exprimer comme \"Que dois-je mod\u00e9liser?\". Commen\u00e7ons simplement et donnons-nous l'objectif de tester l'impact que le confinement a sur la propagation du virus. Question Avec pour objectif de simuler l'effet du d\u00e9placement des individus sur une pand\u00e9mie, quels sont les \u00e9l\u00e9ments/entit\u00e9s qui devront faire partie de ma simulation ? Prenez un moment pour r\u00e9fl\u00e9chir \u00e0 cette question avant de passer au paragraphe suivant. Deux \u00e9l\u00e9ments sont fondamentaux dans notre contexte: il faudra bien sur que notre simulateur repr\u00e9sente des humains, et pour repr\u00e9senter l'effet du d\u00e9placement, il va falloir que ces humains se d\u00e9place dans un environnement. Question Quelles propri\u00e9t\u00e9s les humains et l'environnement devront avoir dans la simulation ? Encore une fois prenez un moment pour essayer de r\u00e9pondre \u00e0 cette question avant de continuer. Ici, ce qu'il est important de comprendre, c'est qu'il va falloir choisir ce qui nous semble n\u00e9cessaire, de ce qui ne l'est pas. Nous est-il n\u00e9cessaire par exemple de savoir si tel individu porte un Tshirt vert ou une robe jaune ? A priori non, le virus ne semble pas s'int\u00e9resser \u00e0 la mode. Mod\u00e9liser cette information nous demanderait de faire des efforts inutiles, nous allons donc faire abstraction de cette information. Definition 1: Abstraction L'abstraction est un processus qui permet de repr\u00e9senter des objets r\u00e9els en objets informatiques simplifi\u00e9s. Elle consiste donc \u00e0 s\u00e9l\u00e9ctionner les caract\u00e9ristiques pertinentes et n\u00e9cessaires des objets de celles qui ne le sont pas. Pouvons-nous nous passer de repr\u00e9senter la position d'une personne dans l'environnement ? Non, cette information doit n\u00e9cessairement \u00eatre prise en compte pour tester l'influence du confinement et donc du d\u00e9placement de nos individus. Par ces deux exemples de question je vous esp\u00e8re convaincus de l'importance de l'abstraction pour r\u00e9aliser un simulateur performant. Moi voil\u00e0, \u00e7a va plus loin, mon objectif \u00e0 moi n'est pas de r\u00e9aliser un simulateur pour influencer des d\u00e9cisions politiques, je laisse cette t\u00e2che aux \u00e9pid\u00e9miologistes. Mon objectif \u00e0 moi est de r\u00e9aliser un simulateur pour enseigner l'informatique tout en ayant une introduction \u00e0 ce qui peut se faire en \u00e9pid\u00e9miologie. Pour cela je dois faire abstraction de plus d'information qu'un \u00e9pid\u00e9miologiste le ferait. Je limiterais donc les informations mod\u00e9lis\u00e9es \u00e0 cela: un humain a une position, il a un \u00e9tat de sant\u00e9 (en bonne sant\u00e9, infect\u00e9, gu\u00e9ri), il a deux comportements possible (confin\u00e9 ou pas). l'environnement est un espace fini \u00e0 deux dimensions (pas d'obstacles, de d\u00e9cors ou quoi que ce soit d'autre). Comme Scratch vient par d\u00e9faut avec un environnement qui est un espace fini \u00e0 deux dimensions, il n'y a rien a faire \u00e0 ce sujet. Donc passons directement \u00e0 la mod\u00e9lisation d'un individu dans cet environnement. Mod\u00e9liser un individu Figure 1: Un individu se d\u00e9place dans un environnement 3D fini. Comme le virus n'en a que faire de l'apparence des individus, nous non plus. Alors commen\u00e7ons par cr\u00e9er un individu que nous repr\u00e9sentons sous forme d'une balle. Cr\u00e9ez donc un nouveau projet, enlever le sprite par d\u00e9faut, ajouter un nouveau sprite d\u00e9fini par un simple cercle vert et renommer le \"Humain\". Exercice 1 Programmez l'humain pour qu'il se d\u00e9place de mani\u00e8re al\u00e9atoire dans l'espace pour toujours quand on clique sur le drapeau. Attention: on ne veut pas que l'humain se retrouve coinc\u00e9 sur les bords... Exercice 2 Ajouter une variable propre \u00e0 l'humain qui d\u00e9finit si il est confin\u00e9 ou pas. Faites varier son comportement en fonction de cette variable. S'il est confin\u00e9 il ne bouge pas, s'il l'est il se d\u00e9place al\u00e9atoirement. Attention : quand vous cr\u00e9ez une nouvelle variable, vous avez le choix de la partager ou non avec les autres sprites. Plus tard, dans notre cas, nous souhaiterons avoir certains humains confin\u00e9s, d'autres non. On voit donc que notre variable d\u00e9crivant cette caract\u00e9ristique ne doit pas \u00eatre partag\u00e9e ! Solution exercice 1 et 2 La solution propos\u00e9e ici n'est qu'une proposition. Comme souvent en informatique il y a bien des solutions aussi valables les unes que les autres. Je vous laisse juger la validit\u00e9 de la votre. Exercice 3 Ajouter une variable \u00e0 l'humain pour indiquer s'il est sain, infect\u00e9 ou gu\u00e9ri. Ajouter une fonction pour l'infecter. Puis ajouter une variable qui permet de savoir \u00e0 combien de jours de la gu\u00e9rison il est et une fonction qui sera appel\u00e9e \u00e0 chaque instant de la boucle principale pour v\u00e9rifier son \u00e9tat de sant\u00e9 et le mettre \u00e0 jour. Chaque fois que cette fonction est appel\u00e9e, si la personne est contamin\u00e9e, le nombre de jours diminue de 1. Si ce nombre arrive \u00e0 0 alors la personne est gu\u00e9rie. Faites varier l'apparence du sprite en fonction de son \u00e9tat de sant\u00e9. Solution exercice 3 Remarquez ici que pour faire varier l'apparence du sprite, j'ai choisi de choisir l'instruction \"basculer de costume\" plut\u00f4t \"mettre l'effet ...\". Sans pouvoir vous en dire plus, je vous conseille d'en faire autant pour faciliter le travail \u00e0 venir. Peupler l'environnement Figure 2: Une multitude d'individus se d\u00e9place dans un environnement 3D fini. Pour l'instant nous avons mod\u00e9lis\u00e9 un individu. Notre objectif va \u00eatre maintenant d'avoir un grand nombre d'individu pour mod\u00e9liser notre soci\u00e9t\u00e9. Nous utiliserons pour cela l'instruction \"cr\u00e9er un clone de moi-m\u00eame\" et l'\u00e9venement \"quand je commence comme un clone\" qui vous permettrons de faire une copie de votre individu et de ses propri\u00e9t\u00e9s. Exercice 4 Tester ces deux nouvelles briques et utilisez-les pour peupler votre monde virtuel de 300 individus. Solution exercice 4 Remarquez ici que j'ai utiliser l'instruction \"cacher\" puis \"montrer\". C'est une petite astuce en Scratch pour permettre aux clones d'\u00eatre cr\u00e9\u00e9 plus rapidement. Vous pourriez aussi cr\u00e9er une fonction d\u00e9di\u00e9e \u00e0 l'initialisation de la sc\u00e8ne et cr\u00e9er le bloc correspondant en s\u00e9lectionnant l'option \"Ex\u00e9cuter sans rafra\u00eechissement d'\u00e9cran\". Mod\u00e9liser l'infection Figure 3: Une \u00e9pid\u00e9mie se propage dans une population. Vous voil\u00e0 presque pr\u00eats \u00e0 voir faire appara\u00eetre le virus dans votre simulation. C'est ici qu'il sera primordial d'avoir cr\u00e9\u00e9 les variables que nous avons utilis\u00e9s jusqu'ici pour qu'elles soient propre au sprite (on parlera ici de variable priv\u00e9e en opposition avec les variables globales qui sont partag\u00e9es par tous les sprites et que nous utiliserons plus tard). En effet il va falloir transmettre le virus \u00e0 un individu. Seul l'\u00e9tat de sant\u00e9 de cet individu devra \u00eatre affect\u00e9 \u00e0 ce moment. On voit donc qu'il est n\u00e9cessaire que chaque individu ait sa propre caract\u00e9ristique \"Etat de sant\u00e9\". Exercice 5 Modifier votre programme afin que le premier sprite cr\u00e9\u00e9 soit infect\u00e9 au lancement du programme. Puis modifier le programme pour que si un individu en bonne sant\u00e9 entre en contact avec un individu infect\u00e9, il attrape le virus. Pour cela utiliser le bloc capteur \"Couleur ... touch\u00e9e ?\". C'est ici que vous comprendrez pourquoi nous avons pr\u00e9f\u00e9r\u00e9 \"basculer le costume\" du sprite. En effet cela vous permet de peindre le costume correspondant au sprite infect\u00e9 avec une couleur bien pr\u00e9cise et d'utiliser cette couleur comme condition dans \"Couleur ... touch\u00e9e ?\". Solution exercice 5 Ici je ne pr\u00e9sente que les groupes de blocs qui ont \u00e9t\u00e9 modifi\u00e9s. Mod\u00e9liser le confinement Joli travail ! Mais voil\u00e0, pour l'instant, nous n'avons pas beaucoup de contr\u00f4le sur ce qui se passe. Et pour r\u00e9pondre \u00e0 notre question de \"Qu'est ce qui se passerait si...\", il nous manque quelque chose. Si vous vous souvenez bien, quelques paragraphes plus haut, nous parlions de confinement. Nous avons m\u00eame une caract\u00e9ristique de chacun de nos individus qui permet de l'immobiliser si cette caract\u00e9ristique de confinement est d\u00e9finie comme vrai (ou \"oui\" dans notre programme pour \u00eatre exact). L'objectif est maintenant d'utiliser cette caract\u00e9ristique pour r\u00e9pondre \u00e0 notre question: \"Que se passerait-il si n % de la population \u00e9tait confin\u00e9e\". Repr\u00e9sentons ce n par une variable. Question Est-ce que n doit \u00eatre priv\u00e9e ou globale (une valeur ind\u00e9pendante pour chaque individu ou une valeur partag\u00e9e par tous) ? R\u00e9ponse Cette variable doit \u00eatre globale. Elle caract\u00e9rise toute la population. Si 10% de la population est confin\u00e9e, ce pourcentage est valable pour chaque individu. Exercice 6 Cr\u00e9er une variable globale nomm\u00e9e PourcentageConfin\u00e9 et \u00e0 l'aide de la fonction \"nombre al\u00e9atoire entre ... et ...\" changer votre programme pour que PourcentageConfin\u00e9 % de la population reste confin\u00e9 (immobile). Solution exercice 6 Cr\u00e9er la fonction D\u00e9finiConfinemenet et appelez l\u00e0 dans les fonction. Si vous avez un probl\u00e8me pour comprendre ce programme, imaginez que vous ayez un \u00e9norme d\u00e9 \u00e0 100 faces. \"nombre al\u00e9atoire entre 1 et 100\" vous donne le r\u00e9sultat d'un tel d\u00e9. Maintenant imaginez que PourcentageConfin\u00e9 est \u00e9gal \u00e0 20. Je voudrais avoir 20 chances sur 100 que ma variable confin\u00e9 soit d\u00e9finie comme \"oui\" et c'est bien cec qui se passe si je le fait pour toutes les valeurs de d\u00e9 inf\u00e9rieures \u00e0 20. D\u00e9finissez le pourcentage \u00e0 diff\u00e9rentes valeurs et regardez la propagation du virus. Remarquez que vous pouvez choisir quelles variables sont affich\u00e9es sur votre environnement en cochant ou non la bo\u00eete \u00e0 gauche de vos variables dans l'onglet code>Variables. Puisque seul le pourcentage est globale, seule cette variable devrait \u00eatre affich\u00e9e. En faisant un clic droit sur cette variable dans l'environnement vous pouvez aussi s\u00e9l\u00e9ctionner l'option \"Barre de d\u00e9filement\" ainsi que \"change slider range\" qui vous permettront d'int\u00e9ragir facilement avec votre simulateur sans avoir \u00e0 changer votre programme (le visuel auquel vous devriez pouvoir arriver est visible dans la solution de l'exercice pr\u00e9c\u00e9dent). Quantifier la propagation Figure 4: Courbe d'\u00e9volution du nombre de personnes infect\u00e9es. Peut-\u00eatre pouvez-vous d\u00e9j\u00e0 voir les diff\u00e9rences apport\u00e9es par le confinement. Elle est flagrande si nous changeons le pourcentage de confinement de 0 \u00e0 100%. Qu'en est-il du changement lorsque l'on passe de 25 \u00e0 75% ? Ce que je vous propose est d'avoir un aper\u00e7u quantitatif de ce qui se passe dans notre simulateur. Pour cela, nous allons faire un programme qui dessine une courbe repr\u00e9sentant le nombre de personnes infect\u00e9es en fonction du temps. Mais d'abord, essayons simplement de dessiner une courbe quelconque. Exercice 7 Cr\u00e9er un nouveau sprite sans rien dans son costume et ajouter l'extension \"stylo\" au bloc de code (pour ajouter une extension, cliquer sur la petite ic\u00f4ne tout en bas \u00e0 gauche avec un petit +). Cette extension est id\u00e9ale pour dessiner une courbe. En effet, quand on met le \"stylo en position d'\u00e9criture\", alors lorsque l'on fait bouger le sprite, il laisse une marque de stylo derri\u00e8re lui. Quand on \"releve le stylo\" il n'\u00e9crit plus. A l'aide de ces nouvelles instructions, dessinez votre fonction trigonom\u00e9trique pr\u00e9f\u00e9r\u00e9e, si vous en avez une. Solution exercice 7 Remarquez que pour dessiner en paix pendant un moment, j'ai enlev\u00e9 le bloc \"quand drapeau est cliqu\u00e9\" de mon sprite de d\u00e9part. Ca me permet de voir ma courbe sans une foule qui grouille devant et de debugger mon code avec plus de claret\u00e9. Exercice 8 Maintenant que vous vous \u00eates familiaris\u00e9s avec les blocs \"stylo\", utilisez les pour dessiner la courbe qui repr\u00e9sente le nombre de personnes infect\u00e9es en fonction du temps. Indice: cr\u00e9er un variable globale NbMalade qui sera mise \u00e0 jour dans le programme des humains. Solution exercice 8 Pour r\u00e9soudre ce probl\u00e8me, j'ai cr\u00e9\u00e9 une variable globale NbMalade initialis\u00e9e \u00e0 z\u00e9ro quand mon programme d\u00e9marre et mise \u00e0 jour \u00e0 chaque fois qu'une personne est infect\u00e9e (+1) et qu'une personne est gu\u00e9rie (-1). A chaque nouveau jour je peux donc d\u00e9placer mon sprite stylo en fonction de cette variable. Le \"-180\" ici est simplement un d\u00e9calage qui me permet de dessiner le 0 en bas de l'environnement. Conclusion F\u00e9licitation si vous \u00eates arrivez jusque l\u00e0 vous pouvez maintenant voir la courbe qui repr\u00e9sente le nombre de personnes malade en fonction du temps. Cette courbe ressemble normalement \u00e0 une sorte de cloche. Comme vous l'imaginez peut-\u00eatre, il est possible d'aller plus loin dans notre mod\u00e9lisation ou dans notre retour quantitatif: Vous pourriez afficher le nombre maximal de personne malade atteint au cours d'un simulation. Ce nombre est tr\u00e8s important car c'est celui-ci qu'il faut comparer \u00e0 la capacit\u00e9 maximale de traitement de notre syst\u00e8me de sant\u00e9. Ainsi il est primordial pour nos politiques de prendre des d\u00e9cisions qui vont applatir notre cloche et r\u00e9duire ce nombre, afin que le syst\u00e8me de sant\u00e9 ne soit pas satur\u00e9 et que tout le monde puisse \u00eatre trait\u00e9 dans de bonnes conditions. Vous pourriez mod\u00e9liser l'impact d'autres facteurs tel que les normes d'hygi\u00e8nes comme je l'\u00e9voquais en introduction(on pourrait par exemple repr\u00e9senter ces normes par une diff\u00e9rente zone d'influence de nos individus), la couverture vaccinale, la contagiosit\u00e9 du virus... Enfin pour aller beaucoup plus loin je vous conseille de regarder la vid\u00e9o de 3Blue1Brown sur le sujet. Pour aller plus loin aussi dans la r\u00e9flexion sur les chiffres que l'on lit dans la presse, je vous invite \u00e9galement \u00e0 lire cet article de Tomas Pueyo que j'ai trouv\u00e9 tr\u00e8s int\u00e9ressant. Enfin merci \u00e0 Mitch Resnick pour avoir d\u00e9j\u00e0 fait une partie du travail en programmant un simulateur en Scratch sur lequel je me suis fortement inspir\u00e9.","title":"Simulateur"},{"location":"simulateur/#simulateur-en-scratch","text":"Quel est l'impact de nos actions sur la propagation d'un virus. Que se passerait-il si la moiti\u00e9 d'entre nous respections le confinement ? Que se passerait-il si chacun faisait plus attention aux normes d'hygi\u00e8ne ? Il nous est facile d'estimer la tendance de ces actions, par exemple de pr\u00e9dire que la propagation du virus sera plus rapide si nous respectons moins les normes d'hygi\u00e8ne, mais il nous est beaucoup plus difficile d'aller plus loin dans cette pr\u00e9diction pour aller vers du quantitatif par exemple et r\u00e9pondre \u00e0 la question \"Qu'est-ce qui se passerait si ... ?\". Pour prendre les bonnes d\u00e9cisions et minimiser les risques pris, des outils de pr\u00e9diction sont donc n\u00e9cessaires. Alors comment faire ces pr\u00e9dicitons ? On va pouvoir utiliser la puissance de calcul des ordinateurs qui nous permettront de programmer des simulateurs. Les simulations sont utiles dans le contexte de l'\u00e9tude d'une \u00e9pid\u00e9mie comme celle qui nous touche aujourd'hui, mais elles sont aussi utiles dans d'autres domaines tels que: L'\u00e9ducation, par exemple pour former des pilotes d'avion, La construction de batiments, par exemple pour tester l'ergonomie d'un nouveau projet, La m\u00e9canique, pour tester par exemple l'a\u00e9rodynamie de nos pi\u00e8ces, et bien d'autre: m\u00e9t\u00e9o, astronomie, \u00e9conomie, robotique, sport... Dans ce projet je vous propose de d\u00e9couvrir les \u00e9l\u00e9ments fondamentaux de ces simulateurs, tout en pratiquant vos comp\u00e9tences informatiques. Nous verrons entre autres que la capacit\u00e9 d'abstraction est primordiale \u00e0 la cr\u00e9ation d'un simulateur. Ce projet permet \u00e9galement de travailler le concept de variables priv\u00e9es et globales.","title":"Simulateur en Scratch"},{"location":"simulateur/#pre-requis","text":"Pour suivre cette activit\u00e9, il vous sera n\u00e9cessaire de conna\u00eetre les bases de la programmation en scratch. Vous devrez ainsi id\u00e9alement avoir d\u00e9j\u00e0 programm\u00e9 dans ce langage et \u00eatre famili\u00e9 avec les concepts d'instruction, de condition, de boucle, de variable et de fonction. Comme Scratch a \u00e9t\u00e9 con\u00e7u pour les petits (attention cela n'emp\u00eache pas que l'on puisse aller tr\u00e8s loin avec !), la plupart des introductions \u00e0 Scratch peuvent \u00eatre assez lentes pour les plus ag\u00e9s. Pour vous familiariser \u00e0 Scratch de mani\u00e8re plus stimulante, je vous ai donc pr\u00e9par\u00e9 l'activit\u00e9 Casse Briques .","title":"Pr\u00e9-requis"},{"location":"simulateur/#choix-de-modelisation","text":"Pour commencer, nous allons devoir r\u00e9pondre \u00e0 la question: \"Que dois-je simuler ?\" que nous pourrions aussi exprimer comme \"Que dois-je mod\u00e9liser?\". Commen\u00e7ons simplement et donnons-nous l'objectif de tester l'impact que le confinement a sur la propagation du virus. Question Avec pour objectif de simuler l'effet du d\u00e9placement des individus sur une pand\u00e9mie, quels sont les \u00e9l\u00e9ments/entit\u00e9s qui devront faire partie de ma simulation ? Prenez un moment pour r\u00e9fl\u00e9chir \u00e0 cette question avant de passer au paragraphe suivant. Deux \u00e9l\u00e9ments sont fondamentaux dans notre contexte: il faudra bien sur que notre simulateur repr\u00e9sente des humains, et pour repr\u00e9senter l'effet du d\u00e9placement, il va falloir que ces humains se d\u00e9place dans un environnement. Question Quelles propri\u00e9t\u00e9s les humains et l'environnement devront avoir dans la simulation ? Encore une fois prenez un moment pour essayer de r\u00e9pondre \u00e0 cette question avant de continuer. Ici, ce qu'il est important de comprendre, c'est qu'il va falloir choisir ce qui nous semble n\u00e9cessaire, de ce qui ne l'est pas. Nous est-il n\u00e9cessaire par exemple de savoir si tel individu porte un Tshirt vert ou une robe jaune ? A priori non, le virus ne semble pas s'int\u00e9resser \u00e0 la mode. Mod\u00e9liser cette information nous demanderait de faire des efforts inutiles, nous allons donc faire abstraction de cette information. Definition 1: Abstraction L'abstraction est un processus qui permet de repr\u00e9senter des objets r\u00e9els en objets informatiques simplifi\u00e9s. Elle consiste donc \u00e0 s\u00e9l\u00e9ctionner les caract\u00e9ristiques pertinentes et n\u00e9cessaires des objets de celles qui ne le sont pas. Pouvons-nous nous passer de repr\u00e9senter la position d'une personne dans l'environnement ? Non, cette information doit n\u00e9cessairement \u00eatre prise en compte pour tester l'influence du confinement et donc du d\u00e9placement de nos individus. Par ces deux exemples de question je vous esp\u00e8re convaincus de l'importance de l'abstraction pour r\u00e9aliser un simulateur performant. Moi voil\u00e0, \u00e7a va plus loin, mon objectif \u00e0 moi n'est pas de r\u00e9aliser un simulateur pour influencer des d\u00e9cisions politiques, je laisse cette t\u00e2che aux \u00e9pid\u00e9miologistes. Mon objectif \u00e0 moi est de r\u00e9aliser un simulateur pour enseigner l'informatique tout en ayant une introduction \u00e0 ce qui peut se faire en \u00e9pid\u00e9miologie. Pour cela je dois faire abstraction de plus d'information qu'un \u00e9pid\u00e9miologiste le ferait. Je limiterais donc les informations mod\u00e9lis\u00e9es \u00e0 cela: un humain a une position, il a un \u00e9tat de sant\u00e9 (en bonne sant\u00e9, infect\u00e9, gu\u00e9ri), il a deux comportements possible (confin\u00e9 ou pas). l'environnement est un espace fini \u00e0 deux dimensions (pas d'obstacles, de d\u00e9cors ou quoi que ce soit d'autre). Comme Scratch vient par d\u00e9faut avec un environnement qui est un espace fini \u00e0 deux dimensions, il n'y a rien a faire \u00e0 ce sujet. Donc passons directement \u00e0 la mod\u00e9lisation d'un individu dans cet environnement.","title":"Choix de mod\u00e9lisation"},{"location":"simulateur/#modeliser-un-individu","text":"Figure 1: Un individu se d\u00e9place dans un environnement 3D fini. Comme le virus n'en a que faire de l'apparence des individus, nous non plus. Alors commen\u00e7ons par cr\u00e9er un individu que nous repr\u00e9sentons sous forme d'une balle. Cr\u00e9ez donc un nouveau projet, enlever le sprite par d\u00e9faut, ajouter un nouveau sprite d\u00e9fini par un simple cercle vert et renommer le \"Humain\". Exercice 1 Programmez l'humain pour qu'il se d\u00e9place de mani\u00e8re al\u00e9atoire dans l'espace pour toujours quand on clique sur le drapeau. Attention: on ne veut pas que l'humain se retrouve coinc\u00e9 sur les bords... Exercice 2 Ajouter une variable propre \u00e0 l'humain qui d\u00e9finit si il est confin\u00e9 ou pas. Faites varier son comportement en fonction de cette variable. S'il est confin\u00e9 il ne bouge pas, s'il l'est il se d\u00e9place al\u00e9atoirement. Attention : quand vous cr\u00e9ez une nouvelle variable, vous avez le choix de la partager ou non avec les autres sprites. Plus tard, dans notre cas, nous souhaiterons avoir certains humains confin\u00e9s, d'autres non. On voit donc que notre variable d\u00e9crivant cette caract\u00e9ristique ne doit pas \u00eatre partag\u00e9e ! Solution exercice 1 et 2 La solution propos\u00e9e ici n'est qu'une proposition. Comme souvent en informatique il y a bien des solutions aussi valables les unes que les autres. Je vous laisse juger la validit\u00e9 de la votre. Exercice 3 Ajouter une variable \u00e0 l'humain pour indiquer s'il est sain, infect\u00e9 ou gu\u00e9ri. Ajouter une fonction pour l'infecter. Puis ajouter une variable qui permet de savoir \u00e0 combien de jours de la gu\u00e9rison il est et une fonction qui sera appel\u00e9e \u00e0 chaque instant de la boucle principale pour v\u00e9rifier son \u00e9tat de sant\u00e9 et le mettre \u00e0 jour. Chaque fois que cette fonction est appel\u00e9e, si la personne est contamin\u00e9e, le nombre de jours diminue de 1. Si ce nombre arrive \u00e0 0 alors la personne est gu\u00e9rie. Faites varier l'apparence du sprite en fonction de son \u00e9tat de sant\u00e9. Solution exercice 3 Remarquez ici que pour faire varier l'apparence du sprite, j'ai choisi de choisir l'instruction \"basculer de costume\" plut\u00f4t \"mettre l'effet ...\". Sans pouvoir vous en dire plus, je vous conseille d'en faire autant pour faciliter le travail \u00e0 venir.","title":"Mod\u00e9liser un individu"},{"location":"simulateur/#peupler-lenvironnement","text":"Figure 2: Une multitude d'individus se d\u00e9place dans un environnement 3D fini. Pour l'instant nous avons mod\u00e9lis\u00e9 un individu. Notre objectif va \u00eatre maintenant d'avoir un grand nombre d'individu pour mod\u00e9liser notre soci\u00e9t\u00e9. Nous utiliserons pour cela l'instruction \"cr\u00e9er un clone de moi-m\u00eame\" et l'\u00e9venement \"quand je commence comme un clone\" qui vous permettrons de faire une copie de votre individu et de ses propri\u00e9t\u00e9s. Exercice 4 Tester ces deux nouvelles briques et utilisez-les pour peupler votre monde virtuel de 300 individus. Solution exercice 4 Remarquez ici que j'ai utiliser l'instruction \"cacher\" puis \"montrer\". C'est une petite astuce en Scratch pour permettre aux clones d'\u00eatre cr\u00e9\u00e9 plus rapidement. Vous pourriez aussi cr\u00e9er une fonction d\u00e9di\u00e9e \u00e0 l'initialisation de la sc\u00e8ne et cr\u00e9er le bloc correspondant en s\u00e9lectionnant l'option \"Ex\u00e9cuter sans rafra\u00eechissement d'\u00e9cran\".","title":"Peupler l'environnement"},{"location":"simulateur/#modeliser-linfection","text":"Figure 3: Une \u00e9pid\u00e9mie se propage dans une population. Vous voil\u00e0 presque pr\u00eats \u00e0 voir faire appara\u00eetre le virus dans votre simulation. C'est ici qu'il sera primordial d'avoir cr\u00e9\u00e9 les variables que nous avons utilis\u00e9s jusqu'ici pour qu'elles soient propre au sprite (on parlera ici de variable priv\u00e9e en opposition avec les variables globales qui sont partag\u00e9es par tous les sprites et que nous utiliserons plus tard). En effet il va falloir transmettre le virus \u00e0 un individu. Seul l'\u00e9tat de sant\u00e9 de cet individu devra \u00eatre affect\u00e9 \u00e0 ce moment. On voit donc qu'il est n\u00e9cessaire que chaque individu ait sa propre caract\u00e9ristique \"Etat de sant\u00e9\". Exercice 5 Modifier votre programme afin que le premier sprite cr\u00e9\u00e9 soit infect\u00e9 au lancement du programme. Puis modifier le programme pour que si un individu en bonne sant\u00e9 entre en contact avec un individu infect\u00e9, il attrape le virus. Pour cela utiliser le bloc capteur \"Couleur ... touch\u00e9e ?\". C'est ici que vous comprendrez pourquoi nous avons pr\u00e9f\u00e9r\u00e9 \"basculer le costume\" du sprite. En effet cela vous permet de peindre le costume correspondant au sprite infect\u00e9 avec une couleur bien pr\u00e9cise et d'utiliser cette couleur comme condition dans \"Couleur ... touch\u00e9e ?\". Solution exercice 5 Ici je ne pr\u00e9sente que les groupes de blocs qui ont \u00e9t\u00e9 modifi\u00e9s.","title":"Mod\u00e9liser l'infection"},{"location":"simulateur/#modeliser-le-confinement","text":"Joli travail ! Mais voil\u00e0, pour l'instant, nous n'avons pas beaucoup de contr\u00f4le sur ce qui se passe. Et pour r\u00e9pondre \u00e0 notre question de \"Qu'est ce qui se passerait si...\", il nous manque quelque chose. Si vous vous souvenez bien, quelques paragraphes plus haut, nous parlions de confinement. Nous avons m\u00eame une caract\u00e9ristique de chacun de nos individus qui permet de l'immobiliser si cette caract\u00e9ristique de confinement est d\u00e9finie comme vrai (ou \"oui\" dans notre programme pour \u00eatre exact). L'objectif est maintenant d'utiliser cette caract\u00e9ristique pour r\u00e9pondre \u00e0 notre question: \"Que se passerait-il si n % de la population \u00e9tait confin\u00e9e\". Repr\u00e9sentons ce n par une variable. Question Est-ce que n doit \u00eatre priv\u00e9e ou globale (une valeur ind\u00e9pendante pour chaque individu ou une valeur partag\u00e9e par tous) ? R\u00e9ponse Cette variable doit \u00eatre globale. Elle caract\u00e9rise toute la population. Si 10% de la population est confin\u00e9e, ce pourcentage est valable pour chaque individu. Exercice 6 Cr\u00e9er une variable globale nomm\u00e9e PourcentageConfin\u00e9 et \u00e0 l'aide de la fonction \"nombre al\u00e9atoire entre ... et ...\" changer votre programme pour que PourcentageConfin\u00e9 % de la population reste confin\u00e9 (immobile). Solution exercice 6 Cr\u00e9er la fonction D\u00e9finiConfinemenet et appelez l\u00e0 dans les fonction. Si vous avez un probl\u00e8me pour comprendre ce programme, imaginez que vous ayez un \u00e9norme d\u00e9 \u00e0 100 faces. \"nombre al\u00e9atoire entre 1 et 100\" vous donne le r\u00e9sultat d'un tel d\u00e9. Maintenant imaginez que PourcentageConfin\u00e9 est \u00e9gal \u00e0 20. Je voudrais avoir 20 chances sur 100 que ma variable confin\u00e9 soit d\u00e9finie comme \"oui\" et c'est bien cec qui se passe si je le fait pour toutes les valeurs de d\u00e9 inf\u00e9rieures \u00e0 20. D\u00e9finissez le pourcentage \u00e0 diff\u00e9rentes valeurs et regardez la propagation du virus. Remarquez que vous pouvez choisir quelles variables sont affich\u00e9es sur votre environnement en cochant ou non la bo\u00eete \u00e0 gauche de vos variables dans l'onglet code>Variables. Puisque seul le pourcentage est globale, seule cette variable devrait \u00eatre affich\u00e9e. En faisant un clic droit sur cette variable dans l'environnement vous pouvez aussi s\u00e9l\u00e9ctionner l'option \"Barre de d\u00e9filement\" ainsi que \"change slider range\" qui vous permettront d'int\u00e9ragir facilement avec votre simulateur sans avoir \u00e0 changer votre programme (le visuel auquel vous devriez pouvoir arriver est visible dans la solution de l'exercice pr\u00e9c\u00e9dent).","title":"Mod\u00e9liser le confinement"},{"location":"simulateur/#quantifier-la-propagation","text":"Figure 4: Courbe d'\u00e9volution du nombre de personnes infect\u00e9es. Peut-\u00eatre pouvez-vous d\u00e9j\u00e0 voir les diff\u00e9rences apport\u00e9es par le confinement. Elle est flagrande si nous changeons le pourcentage de confinement de 0 \u00e0 100%. Qu'en est-il du changement lorsque l'on passe de 25 \u00e0 75% ? Ce que je vous propose est d'avoir un aper\u00e7u quantitatif de ce qui se passe dans notre simulateur. Pour cela, nous allons faire un programme qui dessine une courbe repr\u00e9sentant le nombre de personnes infect\u00e9es en fonction du temps. Mais d'abord, essayons simplement de dessiner une courbe quelconque. Exercice 7 Cr\u00e9er un nouveau sprite sans rien dans son costume et ajouter l'extension \"stylo\" au bloc de code (pour ajouter une extension, cliquer sur la petite ic\u00f4ne tout en bas \u00e0 gauche avec un petit +). Cette extension est id\u00e9ale pour dessiner une courbe. En effet, quand on met le \"stylo en position d'\u00e9criture\", alors lorsque l'on fait bouger le sprite, il laisse une marque de stylo derri\u00e8re lui. Quand on \"releve le stylo\" il n'\u00e9crit plus. A l'aide de ces nouvelles instructions, dessinez votre fonction trigonom\u00e9trique pr\u00e9f\u00e9r\u00e9e, si vous en avez une. Solution exercice 7 Remarquez que pour dessiner en paix pendant un moment, j'ai enlev\u00e9 le bloc \"quand drapeau est cliqu\u00e9\" de mon sprite de d\u00e9part. Ca me permet de voir ma courbe sans une foule qui grouille devant et de debugger mon code avec plus de claret\u00e9. Exercice 8 Maintenant que vous vous \u00eates familiaris\u00e9s avec les blocs \"stylo\", utilisez les pour dessiner la courbe qui repr\u00e9sente le nombre de personnes infect\u00e9es en fonction du temps. Indice: cr\u00e9er un variable globale NbMalade qui sera mise \u00e0 jour dans le programme des humains. Solution exercice 8 Pour r\u00e9soudre ce probl\u00e8me, j'ai cr\u00e9\u00e9 une variable globale NbMalade initialis\u00e9e \u00e0 z\u00e9ro quand mon programme d\u00e9marre et mise \u00e0 jour \u00e0 chaque fois qu'une personne est infect\u00e9e (+1) et qu'une personne est gu\u00e9rie (-1). A chaque nouveau jour je peux donc d\u00e9placer mon sprite stylo en fonction de cette variable. Le \"-180\" ici est simplement un d\u00e9calage qui me permet de dessiner le 0 en bas de l'environnement.","title":"Quantifier la propagation"},{"location":"simulateur/#conclusion","text":"F\u00e9licitation si vous \u00eates arrivez jusque l\u00e0 vous pouvez maintenant voir la courbe qui repr\u00e9sente le nombre de personnes malade en fonction du temps. Cette courbe ressemble normalement \u00e0 une sorte de cloche. Comme vous l'imaginez peut-\u00eatre, il est possible d'aller plus loin dans notre mod\u00e9lisation ou dans notre retour quantitatif: Vous pourriez afficher le nombre maximal de personne malade atteint au cours d'un simulation. Ce nombre est tr\u00e8s important car c'est celui-ci qu'il faut comparer \u00e0 la capacit\u00e9 maximale de traitement de notre syst\u00e8me de sant\u00e9. Ainsi il est primordial pour nos politiques de prendre des d\u00e9cisions qui vont applatir notre cloche et r\u00e9duire ce nombre, afin que le syst\u00e8me de sant\u00e9 ne soit pas satur\u00e9 et que tout le monde puisse \u00eatre trait\u00e9 dans de bonnes conditions. Vous pourriez mod\u00e9liser l'impact d'autres facteurs tel que les normes d'hygi\u00e8nes comme je l'\u00e9voquais en introduction(on pourrait par exemple repr\u00e9senter ces normes par une diff\u00e9rente zone d'influence de nos individus), la couverture vaccinale, la contagiosit\u00e9 du virus... Enfin pour aller beaucoup plus loin je vous conseille de regarder la vid\u00e9o de 3Blue1Brown sur le sujet. Pour aller plus loin aussi dans la r\u00e9flexion sur les chiffres que l'on lit dans la presse, je vous invite \u00e9galement \u00e0 lire cet article de Tomas Pueyo que j'ai trouv\u00e9 tr\u00e8s int\u00e9ressant. Enfin merci \u00e0 Mitch Resnick pour avoir d\u00e9j\u00e0 fait une partie du travail en programmant un simulateur en Scratch sur lequel je me suis fortement inspir\u00e9.","title":"Conclusion"}]}